{"C:\\Users\\user\\Documents\\Fourth Year W2023T1\\CPSC 310\\project_team186\\src\\controller\\IInsightFacade.ts":{"path":"C:\\Users\\user\\Documents\\Fourth Year W2023T1\\CPSC 310\\project_team186\\src\\controller\\IInsightFacade.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":113}},"2":{"start":{"line":5,"column":0},"end":{"line":8,"column":89}},"3":{"start":{"line":6,"column":4},"end":{"line":6,"column":48}},"4":{"start":{"line":7,"column":4},"end":{"line":7,"column":42}},"5":{"start":{"line":11,"column":8},"end":{"line":11,"column":23}},"6":{"start":{"line":12,"column":8},"end":{"line":12,"column":52}},"7":{"start":{"line":15,"column":0},"end":{"line":15,"column":36}},"8":{"start":{"line":18,"column":8},"end":{"line":18,"column":23}},"9":{"start":{"line":19,"column":8},"end":{"line":19,"column":53}},"10":{"start":{"line":22,"column":0},"end":{"line":22,"column":38}},"11":{"start":{"line":25,"column":8},"end":{"line":25,"column":23}},"12":{"start":{"line":26,"column":8},"end":{"line":26,"column":59}},"13":{"start":{"line":29,"column":0},"end":{"line":29,"column":50}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":1},"end":{"line":5,"column":2}},"loc":{"start":{"line":5,"column":31},"end":{"line":8,"column":1}},"line":5},"1":{"name":"(anonymous_1)","decl":{"start":{"line":10,"column":4},"end":{"line":10,"column":5}},"loc":{"start":{"line":10,"column":25},"end":{"line":13,"column":5}},"line":10},"2":{"name":"(anonymous_2)","decl":{"start":{"line":17,"column":4},"end":{"line":17,"column":5}},"loc":{"start":{"line":17,"column":25},"end":{"line":20,"column":5}},"line":17},"3":{"name":"(anonymous_3)","decl":{"start":{"line":24,"column":4},"end":{"line":24,"column":5}},"loc":{"start":{"line":24,"column":25},"end":{"line":27,"column":5}},"line":24}},"branchMap":{"0":{"loc":{"start":{"line":8,"column":24},"end":{"line":8,"column":87}},"type":"binary-expr","locations":[{"start":{"line":8,"column":24},"end":{"line":8,"column":50}},{"start":{"line":8,"column":55},"end":{"line":8,"column":86}}],"line":8}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":108,"6":108,"7":1,"8":0,"9":0,"10":1,"11":8,"12":8,"13":1},"f":{"0":1,"1":108,"2":0,"3":8},"b":{"0":[1,1]},"inputSourceMap":{"version":3,"file":"C:/Users/user/Documents/Fourth Year W2023T1/CPSC 310/project_team186/src/controller/IInsightFacade.ts","sources":["C:/Users/user/Documents/Fourth Year W2023T1/CPSC 310/project_team186/src/controller/IInsightFacade.ts"],"names":[],"mappings":";;;AAMA,IAAY,kBAGX;AAHD,WAAY,kBAAkB;IAC7B,2CAAqB,CAAA;IACrB,qCAAe,CAAA;AAChB,CAAC,EAHW,kBAAkB,GAAlB,0BAAkB,KAAlB,0BAAkB,QAG7B;AAYD,MAAa,YAAa,SAAQ,KAAK;IACtC,YAAY,OAAgB;QAC3B,KAAK,CAAC,OAAO,CAAC,CAAC;QACf,KAAK,CAAC,iBAAiB,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;IAC7C,CAAC;CACD;AALD,oCAKC;AAED,MAAa,aAAc,SAAQ,KAAK;IACvC,YAAY,OAAgB;QAC3B,KAAK,CAAC,OAAO,CAAC,CAAC;QACf,KAAK,CAAC,iBAAiB,CAAC,IAAI,EAAE,aAAa,CAAC,CAAC;IAC9C,CAAC;CACD;AALD,sCAKC;AAED,MAAa,mBAAoB,SAAQ,KAAK;IAC7C,YAAY,OAAgB;QAC3B,KAAK,CAAC,OAAO,CAAC,CAAC;QACf,KAAK,CAAC,iBAAiB,CAAC,IAAI,EAAE,mBAAmB,CAAC,CAAC;IACpD,CAAC;CACD;AALD,kDAKC","sourcesContent":["/*\r\n * This is the primary high-level API for the project. In this folder there should be:\r\n * A class called InsightFacade, this should be in a file called InsightFacade.ts.\r\n * You should not change this interface at all or the test suite will not work.\r\n */\r\n\r\nexport enum InsightDatasetKind {\r\n\tSections = \"sections\",\r\n\tRooms = \"rooms\",\r\n}\r\n\r\nexport interface InsightDataset {\r\n\tid: string;\r\n\tkind: InsightDatasetKind;\r\n\tnumRows: number;\r\n}\r\n\r\nexport interface InsightResult {\r\n\t[key: string]: string | number;\r\n}\r\n\r\nexport class InsightError extends Error {\r\n\tconstructor(message?: string) {\r\n\t\tsuper(message);\r\n\t\tError.captureStackTrace(this, InsightError);\r\n\t}\r\n}\r\n\r\nexport class NotFoundError extends Error {\r\n\tconstructor(message?: string) {\r\n\t\tsuper(message);\r\n\t\tError.captureStackTrace(this, NotFoundError);\r\n\t}\r\n}\r\n\r\nexport class ResultTooLargeError extends Error {\r\n\tconstructor(message?: string) {\r\n\t\tsuper(message);\r\n\t\tError.captureStackTrace(this, ResultTooLargeError);\r\n\t}\r\n}\r\n\r\nexport interface IInsightFacade {\r\n\t/**\r\n\t * Add a dataset to insightUBC.\r\n\t *\r\n\t * @param id  The id of the dataset being added. Follows the format /^[^_]+$/\r\n\t * @param content  The base64 content of the dataset. This content should be in the form of a serialized zip file.\r\n\t * @param kind  The kind of the dataset\r\n\t *\r\n\t * @return Promise <string[]>\r\n\t *\r\n\t * The promise should fulfill on a successful add, reject for any failures.\r\n\t * The promise should fulfill with a string array,\r\n\t * containing the ids of all currently added datasets upon a successful add.\r\n\t * The promise should reject with an InsightError describing the error.\r\n\t *\r\n\t * An id is invalid if it contains an underscore, or is only whitespace characters.\r\n\t * If id is the same as the id of an already added dataset, the dataset should be rejected and not saved.\r\n\t *\r\n\t * After receiving the dataset, it should be processed into a data structure of\r\n\t * your design. The processed data structure should be persisted to disk; your\r\n\t * system should be able to load this persisted value into memory for answering\r\n\t * queries.\r\n\t *\r\n\t * Ultimately, a dataset must be added or loaded from disk before queries can\r\n\t * be successfully answered.\r\n\t */\r\n\taddDataset(id: string, content: string, kind: InsightDatasetKind): Promise<string[]>;\r\n\r\n\t/**\r\n\t * Remove a dataset from insightUBC.\r\n\t *\r\n\t * @param id  The id of the dataset to remove. Follows the format /^[^_]+$/\r\n\t *\r\n\t * @return Promise <string>\r\n\t *\r\n\t * The promise should fulfill upon a successful removal, reject on any error.\r\n\t * Attempting to remove a dataset that hasn't been added yet counts as an error.\r\n\t *\r\n\t * An id is invalid if it contains an underscore, or is only whitespace characters.\r\n\t *\r\n\t * The promise should fulfill the id of the dataset that was removed.\r\n\t * The promise should reject with a NotFoundError (if a valid id was not yet added)\r\n\t * or an InsightError (invalid id or any other source of failure) describing the error.\r\n\t *\r\n\t * This will delete both disk and memory caches for the dataset for the id meaning\r\n\t * that subsequent queries for that id should fail unless a new addDataset happens first.\r\n\t */\r\n\tremoveDataset(id: string): Promise<string>;\r\n\r\n\t/**\r\n\t * Perform a query on insightUBC.\r\n\t *\r\n\t * @param query  The query to be performed.\r\n\t *\r\n\t * If a query is incorrectly formatted, references a dataset not added (in memory or on disk),\r\n\t * or references multiple datasets, it should be rejected.\r\n\t *\r\n\t * @return Promise <InsightResult[]>\r\n\t *\r\n\t * The promise should fulfill with an array of results.\r\n\t * The promise should reject with a ResultTooLargeError (if the query returns too many results)\r\n\t * or an InsightError (for any other source of failure) describing the error.\r\n\t */\r\n\tperformQuery(query: unknown): Promise<InsightResult[]>;\r\n\r\n\t/**\r\n\t * List all currently added datasets, their types, and number of rows.\r\n\t *\r\n\t * @return Promise <InsightDataset[]>\r\n\t * The promise should fulfill an array of currently added InsightDatasets, and will only fulfill.\r\n\t */\r\n\tlistDatasets(): Promise<InsightDataset[]>;\r\n}\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"9fc71f4ea5583479ac21d00383d24b5986a8914b","contentHash":"66fdfaa3f7b0ca5d90eaab86806352fcdd604283b4b5cd41ba1aa7329e4407b8"},"C:\\Users\\user\\Documents\\Fourth Year W2023T1\\CPSC 310\\project_team186\\src\\controller\\InsightFacade.ts":{"path":"C:\\Users\\user\\Documents\\Fourth Year W2023T1\\CPSC 310\\project_team186\\src\\controller\\InsightFacade.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":12,"column":3}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"2":{"start":{"line":3,"column":26},"end":{"line":3,"column":33}},"3":{"start":{"line":4,"column":15},"end":{"line":4,"column":52}},"4":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"5":{"start":{"line":6,"column":6},"end":{"line":6,"column":68}},"6":{"start":{"line":6,"column":51},"end":{"line":6,"column":63}},"7":{"start":{"line":8,"column":4},"end":{"line":8,"column":39}},"8":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"9":{"start":{"line":10,"column":26},"end":{"line":10,"column":33}},"10":{"start":{"line":11,"column":4},"end":{"line":11,"column":17}},"11":{"start":{"line":13,"column":25},"end":{"line":17,"column":2}},"12":{"start":{"line":14,"column":4},"end":{"line":14,"column":72}},"13":{"start":{"line":16,"column":4},"end":{"line":16,"column":21}},"14":{"start":{"line":18,"column":19},"end":{"line":24,"column":1}},"15":{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},"16":{"start":{"line":19,"column":31},"end":{"line":19,"column":42}},"17":{"start":{"line":20,"column":17},"end":{"line":20,"column":19}},"18":{"start":{"line":21,"column":4},"end":{"line":21,"column":141}},"19":{"start":{"line":21,"column":21},"end":{"line":21,"column":141}},"20":{"start":{"line":21,"column":40},"end":{"line":21,"column":141}},"21":{"start":{"line":21,"column":109},"end":{"line":21,"column":141}},"22":{"start":{"line":22,"column":4},"end":{"line":22,"column":36}},"23":{"start":{"line":23,"column":4},"end":{"line":23,"column":18}},"24":{"start":{"line":25,"column":22},"end":{"line":27,"column":1}},"25":{"start":{"line":26,"column":4},"end":{"line":26,"column":62}},"26":{"start":{"line":28,"column":0},"end":{"line":28,"column":62}},"27":{"start":{"line":29,"column":25},"end":{"line":29,"column":52}},"28":{"start":{"line":30,"column":25},"end":{"line":30,"column":69}},"29":{"start":{"line":31,"column":16},"end":{"line":31,"column":49}},"30":{"start":{"line":32,"column":18},"end":{"line":32,"column":55}},"31":{"start":{"line":33,"column":18},"end":{"line":33,"column":55}},"32":{"start":{"line":34,"column":25},"end":{"line":34,"column":69}},"33":{"start":{"line":35,"column":11},"end":{"line":35,"column":38}},"34":{"start":{"line":40,"column":23},"end":{"line":40,"column":40}},"35":{"start":{"line":42,"column":8},"end":{"line":42,"column":41}},"36":{"start":{"line":43,"column":8},"end":{"line":43,"column":34}},"37":{"start":{"line":44,"column":8},"end":{"line":44,"column":61}},"38":{"start":{"line":47,"column":8},"end":{"line":49,"column":9}},"39":{"start":{"line":48,"column":12},"end":{"line":48,"column":92}},"40":{"start":{"line":50,"column":8},"end":{"line":52,"column":9}},"41":{"start":{"line":51,"column":12},"end":{"line":51,"column":112}},"42":{"start":{"line":53,"column":8},"end":{"line":53,"column":57}},"43":{"start":{"line":54,"column":8},"end":{"line":74,"column":9}},"44":{"start":{"line":55,"column":24},"end":{"line":55,"column":45}},"45":{"start":{"line":56,"column":30},"end":{"line":56,"column":76}},"46":{"start":{"line":57,"column":31},"end":{"line":57,"column":67}},"47":{"start":{"line":58,"column":28},"end":{"line":58,"column":68}},"48":{"start":{"line":59,"column":12},"end":{"line":59,"column":50}},"49":{"start":{"line":60,"column":12},"end":{"line":60,"column":43}},"50":{"start":{"line":61,"column":33},"end":{"line":61,"column":81}},"51":{"start":{"line":62,"column":12},"end":{"line":69,"column":15}},"52":{"start":{"line":63,"column":16},"end":{"line":68,"column":17}},"53":{"start":{"line":64,"column":20},"end":{"line":64,"column":76}},"54":{"start":{"line":67,"column":20},"end":{"line":67,"column":78}},"55":{"start":{"line":70,"column":12},"end":{"line":70,"column":59}},"56":{"start":{"line":73,"column":12},"end":{"line":73,"column":97}},"57":{"start":{"line":77,"column":8},"end":{"line":77,"column":77}},"58":{"start":{"line":80,"column":8},"end":{"line":80,"column":37}},"59":{"start":{"line":83,"column":27},"end":{"line":83,"column":29}},"60":{"start":{"line":84,"column":29},"end":{"line":84,"column":34}},"61":{"start":{"line":85,"column":8},"end":{"line":102,"column":12}},"62":{"start":{"line":86,"column":12},"end":{"line":101,"column":13}},"63":{"start":{"line":87,"column":16},"end":{"line":96,"column":17}},"64":{"start":{"line":88,"column":40},"end":{"line":88,"column":70}},"65":{"start":{"line":89,"column":37},"end":{"line":89,"column":60}},"66":{"start":{"line":90,"column":39},"end":{"line":90,"column":82}},"67":{"start":{"line":91,"column":20},"end":{"line":95,"column":21}},"68":{"start":{"line":92,"column":24},"end":{"line":92,"column":46}},"69":{"start":{"line":93,"column":24},"end":{"line":93,"column":50}},"70":{"start":{"line":94,"column":24},"end":{"line":94,"column":79}},"71":{"start":{"line":99,"column":16},"end":{"line":99,"column":77}},"72":{"start":{"line":100,"column":16},"end":{"line":100,"column":55}},"73":{"start":{"line":103,"column":8},"end":{"line":105,"column":9}},"74":{"start":{"line":104,"column":12},"end":{"line":104,"column":98}},"75":{"start":{"line":106,"column":8},"end":{"line":106,"column":26}},"76":{"start":{"line":109,"column":28},"end":{"line":109,"column":30}},"77":{"start":{"line":110,"column":8},"end":{"line":113,"column":11}},"78":{"start":{"line":111,"column":28},"end":{"line":111,"column":57}},"79":{"start":{"line":112,"column":12},"end":{"line":112,"column":38}},"80":{"start":{"line":114,"column":8},"end":{"line":114,"column":27}},"81":{"start":{"line":117,"column":8},"end":{"line":119,"column":9}},"82":{"start":{"line":118,"column":12},"end":{"line":118,"column":111}},"83":{"start":{"line":120,"column":8},"end":{"line":122,"column":9}},"84":{"start":{"line":121,"column":12},"end":{"line":121,"column":119}},"85":{"start":{"line":123,"column":8},"end":{"line":138,"column":9}},"86":{"start":{"line":124,"column":12},"end":{"line":124,"column":44}},"87":{"start":{"line":125,"column":33},"end":{"line":125,"column":81}},"88":{"start":{"line":126,"column":12},"end":{"line":133,"column":15}},"89":{"start":{"line":127,"column":16},"end":{"line":132,"column":17}},"90":{"start":{"line":128,"column":20},"end":{"line":128,"column":76}},"91":{"start":{"line":131,"column":20},"end":{"line":131,"column":80}},"92":{"start":{"line":134,"column":12},"end":{"line":134,"column":39}},"93":{"start":{"line":137,"column":12},"end":{"line":137,"column":99}},"94":{"start":{"line":141,"column":34},"end":{"line":141,"column":92}},"95":{"start":{"line":142,"column":33},"end":{"line":142,"column":87}},"96":{"start":{"line":143,"column":8},"end":{"line":145,"column":9}},"97":{"start":{"line":144,"column":12},"end":{"line":144,"column":110}},"98":{"start":{"line":146,"column":8},"end":{"line":163,"column":9}},"99":{"start":{"line":147,"column":12},"end":{"line":159,"column":13}},"100":{"start":{"line":148,"column":16},"end":{"line":155,"column":17}},"101":{"start":{"line":149,"column":41},"end":{"line":149,"column":108}},"102":{"start":{"line":150,"column":41},"end":{"line":150,"column":95}},"103":{"start":{"line":151,"column":20},"end":{"line":151,"column":57}},"104":{"start":{"line":154,"column":20},"end":{"line":154,"column":112}},"105":{"start":{"line":158,"column":16},"end":{"line":158,"column":103}},"106":{"start":{"line":162,"column":12},"end":{"line":162,"column":41}},"107":{"start":{"line":166,"column":8},"end":{"line":166,"column":74}},"108":{"start":{"line":169,"column":22},"end":{"line":169,"column":63}},"109":{"start":{"line":170,"column":8},"end":{"line":176,"column":9}},"110":{"start":{"line":171,"column":32},"end":{"line":171,"column":60}},"111":{"start":{"line":172,"column":12},"end":{"line":175,"column":13}},"112":{"start":{"line":173,"column":16},"end":{"line":173,"column":46}},"113":{"start":{"line":174,"column":16},"end":{"line":174,"column":58}},"114":{"start":{"line":177,"column":8},"end":{"line":177,"column":58}},"115":{"start":{"line":180,"column":0},"end":{"line":180,"column":32}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":74},"end":{"line":2,"column":75}},"loc":{"start":{"line":2,"column":96},"end":{"line":9,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":6,"column":38},"end":{"line":6,"column":39}},"loc":{"start":{"line":6,"column":49},"end":{"line":6,"column":65}},"line":6},"2":{"name":"(anonymous_2)","decl":{"start":{"line":9,"column":6},"end":{"line":9,"column":7}},"loc":{"start":{"line":9,"column":28},"end":{"line":12,"column":1}},"line":9},"3":{"name":"(anonymous_3)","decl":{"start":{"line":13,"column":80},"end":{"line":13,"column":81}},"loc":{"start":{"line":13,"column":95},"end":{"line":15,"column":1}},"line":13},"4":{"name":"(anonymous_4)","decl":{"start":{"line":15,"column":5},"end":{"line":15,"column":6}},"loc":{"start":{"line":15,"column":20},"end":{"line":17,"column":1}},"line":15},"5":{"name":"(anonymous_5)","decl":{"start":{"line":18,"column":50},"end":{"line":18,"column":51}},"loc":{"start":{"line":18,"column":65},"end":{"line":24,"column":1}},"line":18},"6":{"name":"(anonymous_6)","decl":{"start":{"line":25,"column":56},"end":{"line":25,"column":57}},"loc":{"start":{"line":25,"column":71},"end":{"line":27,"column":1}},"line":25},"7":{"name":"(anonymous_7)","decl":{"start":{"line":41,"column":4},"end":{"line":41,"column":5}},"loc":{"start":{"line":41,"column":18},"end":{"line":45,"column":5}},"line":41},"8":{"name":"(anonymous_8)","decl":{"start":{"line":46,"column":4},"end":{"line":46,"column":5}},"loc":{"start":{"line":46,"column":40},"end":{"line":75,"column":5}},"line":46},"9":{"name":"(anonymous_9)","decl":{"start":{"line":62,"column":67},"end":{"line":62,"column":68}},"loc":{"start":{"line":62,"column":78},"end":{"line":69,"column":13}},"line":62},"10":{"name":"(anonymous_10)","decl":{"start":{"line":76,"column":4},"end":{"line":76,"column":5}},"loc":{"start":{"line":76,"column":20},"end":{"line":78,"column":5}},"line":76},"11":{"name":"(anonymous_11)","decl":{"start":{"line":79,"column":4},"end":{"line":79,"column":5}},"loc":{"start":{"line":79,"column":29},"end":{"line":81,"column":5}},"line":79},"12":{"name":"(anonymous_12)","decl":{"start":{"line":82,"column":4},"end":{"line":82,"column":5}},"loc":{"start":{"line":82,"column":32},"end":{"line":107,"column":5}},"line":82},"13":{"name":"(anonymous_13)","decl":{"start":{"line":85,"column":57},"end":{"line":85,"column":58}},"loc":{"start":{"line":85,"column":77},"end":{"line":102,"column":9}},"line":85},"14":{"name":"(anonymous_14)","decl":{"start":{"line":108,"column":4},"end":{"line":108,"column":5}},"loc":{"start":{"line":108,"column":35},"end":{"line":115,"column":5}},"line":108},"15":{"name":"(anonymous_15)","decl":{"start":{"line":110,"column":24},"end":{"line":110,"column":25}},"loc":{"start":{"line":110,"column":36},"end":{"line":113,"column":9}},"line":110},"16":{"name":"(anonymous_16)","decl":{"start":{"line":116,"column":4},"end":{"line":116,"column":5}},"loc":{"start":{"line":116,"column":28},"end":{"line":139,"column":5}},"line":116},"17":{"name":"(anonymous_17)","decl":{"start":{"line":126,"column":36},"end":{"line":126,"column":37}},"loc":{"start":{"line":126,"column":47},"end":{"line":133,"column":13}},"line":126},"18":{"name":"(anonymous_18)","decl":{"start":{"line":140,"column":4},"end":{"line":140,"column":5}},"loc":{"start":{"line":140,"column":24},"end":{"line":164,"column":5}},"line":140},"19":{"name":"(anonymous_19)","decl":{"start":{"line":165,"column":4},"end":{"line":165,"column":5}},"loc":{"start":{"line":165,"column":19},"end":{"line":167,"column":5}},"line":165},"20":{"name":"(anonymous_20)","decl":{"start":{"line":168,"column":4},"end":{"line":168,"column":5}},"loc":{"start":{"line":168,"column":30},"end":{"line":178,"column":5}},"line":168}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":12,"column":3}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":57},"end":{"line":12,"column":2}}],"line":2},"1":{"loc":{"start":{"line":2,"column":57},"end":{"line":12,"column":2}},"type":"cond-expr","locations":[{"start":{"line":2,"column":74},"end":{"line":9,"column":1}},{"start":{"line":9,"column":6},"end":{"line":12,"column":1}}],"line":2},"2":{"loc":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"type":"if","locations":[{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},{"start":{"line":3,"column":4},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"type":"if","locations":[{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},{"start":{"line":5,"column":4},"end":{"line":7,"column":5}}],"line":5},"4":{"loc":{"start":{"line":5,"column":8},"end":{"line":5,"column":85}},"type":"binary-expr","locations":[{"start":{"line":5,"column":8},"end":{"line":5,"column":13}},{"start":{"line":5,"column":18},"end":{"line":5,"column":84}}],"line":5},"5":{"loc":{"start":{"line":5,"column":18},"end":{"line":5,"column":84}},"type":"cond-expr","locations":[{"start":{"line":5,"column":34},"end":{"line":5,"column":47}},{"start":{"line":5,"column":50},"end":{"line":5,"column":84}}],"line":5},"6":{"loc":{"start":{"line":5,"column":50},"end":{"line":5,"column":84}},"type":"binary-expr","locations":[{"start":{"line":5,"column":50},"end":{"line":5,"column":63}},{"start":{"line":5,"column":67},"end":{"line":5,"column":84}}],"line":5},"7":{"loc":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"type":"if","locations":[{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},{"start":{"line":10,"column":4},"end":{"line":10,"column":33}}],"line":10},"8":{"loc":{"start":{"line":13,"column":25},"end":{"line":17,"column":2}},"type":"binary-expr","locations":[{"start":{"line":13,"column":26},"end":{"line":13,"column":30}},{"start":{"line":13,"column":34},"end":{"line":13,"column":57}},{"start":{"line":13,"column":63},"end":{"line":17,"column":1}}],"line":13},"9":{"loc":{"start":{"line":13,"column":63},"end":{"line":17,"column":1}},"type":"cond-expr","locations":[{"start":{"line":13,"column":80},"end":{"line":15,"column":1}},{"start":{"line":15,"column":5},"end":{"line":17,"column":1}}],"line":13},"10":{"loc":{"start":{"line":18,"column":19},"end":{"line":24,"column":1}},"type":"binary-expr","locations":[{"start":{"line":18,"column":20},"end":{"line":18,"column":24}},{"start":{"line":18,"column":28},"end":{"line":18,"column":45}},{"start":{"line":18,"column":50},"end":{"line":24,"column":1}}],"line":18},"11":{"loc":{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},"type":"if","locations":[{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},{"start":{"line":19,"column":4},"end":{"line":19,"column":42}}],"line":19},"12":{"loc":{"start":{"line":19,"column":8},"end":{"line":19,"column":29}},"type":"binary-expr","locations":[{"start":{"line":19,"column":8},"end":{"line":19,"column":11}},{"start":{"line":19,"column":15},"end":{"line":19,"column":29}}],"line":19},"13":{"loc":{"start":{"line":21,"column":4},"end":{"line":21,"column":141}},"type":"if","locations":[{"start":{"line":21,"column":4},"end":{"line":21,"column":141}},{"start":{"line":21,"column":4},"end":{"line":21,"column":141}}],"line":21},"14":{"loc":{"start":{"line":21,"column":40},"end":{"line":21,"column":141}},"type":"if","locations":[{"start":{"line":21,"column":40},"end":{"line":21,"column":141}},{"start":{"line":21,"column":40},"end":{"line":21,"column":141}}],"line":21},"15":{"loc":{"start":{"line":21,"column":44},"end":{"line":21,"column":107}},"type":"binary-expr","locations":[{"start":{"line":21,"column":44},"end":{"line":21,"column":59}},{"start":{"line":21,"column":63},"end":{"line":21,"column":107}}],"line":21},"16":{"loc":{"start":{"line":25,"column":22},"end":{"line":27,"column":1}},"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":27}},{"start":{"line":25,"column":31},"end":{"line":25,"column":51}},{"start":{"line":25,"column":56},"end":{"line":27,"column":1}}],"line":25},"17":{"loc":{"start":{"line":26,"column":11},"end":{"line":26,"column":61}},"type":"cond-expr","locations":[{"start":{"line":26,"column":37},"end":{"line":26,"column":40}},{"start":{"line":26,"column":43},"end":{"line":26,"column":61}}],"line":26},"18":{"loc":{"start":{"line":26,"column":12},"end":{"line":26,"column":33}},"type":"binary-expr","locations":[{"start":{"line":26,"column":12},"end":{"line":26,"column":15}},{"start":{"line":26,"column":19},"end":{"line":26,"column":33}}],"line":26},"19":{"loc":{"start":{"line":47,"column":8},"end":{"line":49,"column":9}},"type":"if","locations":[{"start":{"line":47,"column":8},"end":{"line":49,"column":9}},{"start":{"line":47,"column":8},"end":{"line":49,"column":9}}],"line":47},"20":{"loc":{"start":{"line":50,"column":8},"end":{"line":52,"column":9}},"type":"if","locations":[{"start":{"line":50,"column":8},"end":{"line":52,"column":9}},{"start":{"line":50,"column":8},"end":{"line":52,"column":9}}],"line":50},"21":{"loc":{"start":{"line":63,"column":16},"end":{"line":68,"column":17}},"type":"if","locations":[{"start":{"line":63,"column":16},"end":{"line":68,"column":17}},{"start":{"line":63,"column":16},"end":{"line":68,"column":17}}],"line":63},"22":{"loc":{"start":{"line":77,"column":15},"end":{"line":77,"column":76}},"type":"binary-expr","locations":[{"start":{"line":77,"column":16},"end":{"line":77,"column":27}},{"start":{"line":77,"column":32},"end":{"line":77,"column":48}},{"start":{"line":77,"column":53},"end":{"line":77,"column":75}}],"line":77},"23":{"loc":{"start":{"line":87,"column":16},"end":{"line":96,"column":17}},"type":"if","locations":[{"start":{"line":87,"column":16},"end":{"line":96,"column":17}},{"start":{"line":87,"column":16},"end":{"line":96,"column":17}}],"line":87},"24":{"loc":{"start":{"line":87,"column":20},"end":{"line":87,"column":88}},"type":"binary-expr","locations":[{"start":{"line":87,"column":20},"end":{"line":87,"column":56}},{"start":{"line":87,"column":60},"end":{"line":87,"column":88}}],"line":87},"25":{"loc":{"start":{"line":91,"column":20},"end":{"line":95,"column":21}},"type":"if","locations":[{"start":{"line":91,"column":20},"end":{"line":95,"column":21}},{"start":{"line":91,"column":20},"end":{"line":95,"column":21}}],"line":91},"26":{"loc":{"start":{"line":103,"column":8},"end":{"line":105,"column":9}},"type":"if","locations":[{"start":{"line":103,"column":8},"end":{"line":105,"column":9}},{"start":{"line":103,"column":8},"end":{"line":105,"column":9}}],"line":103},"27":{"loc":{"start":{"line":117,"column":8},"end":{"line":119,"column":9}},"type":"if","locations":[{"start":{"line":117,"column":8},"end":{"line":119,"column":9}},{"start":{"line":117,"column":8},"end":{"line":119,"column":9}}],"line":117},"28":{"loc":{"start":{"line":120,"column":8},"end":{"line":122,"column":9}},"type":"if","locations":[{"start":{"line":120,"column":8},"end":{"line":122,"column":9}},{"start":{"line":120,"column":8},"end":{"line":122,"column":9}}],"line":120},"29":{"loc":{"start":{"line":127,"column":16},"end":{"line":132,"column":17}},"type":"if","locations":[{"start":{"line":127,"column":16},"end":{"line":132,"column":17}},{"start":{"line":127,"column":16},"end":{"line":132,"column":17}}],"line":127},"30":{"loc":{"start":{"line":143,"column":8},"end":{"line":145,"column":9}},"type":"if","locations":[{"start":{"line":143,"column":8},"end":{"line":145,"column":9}},{"start":{"line":143,"column":8},"end":{"line":145,"column":9}}],"line":143},"31":{"loc":{"start":{"line":147,"column":12},"end":{"line":159,"column":13}},"type":"if","locations":[{"start":{"line":147,"column":12},"end":{"line":159,"column":13}},{"start":{"line":147,"column":12},"end":{"line":159,"column":13}}],"line":147},"32":{"loc":{"start":{"line":148,"column":16},"end":{"line":155,"column":17}},"type":"if","locations":[{"start":{"line":148,"column":16},"end":{"line":155,"column":17}},{"start":{"line":148,"column":16},"end":{"line":155,"column":17}}],"line":148},"33":{"loc":{"start":{"line":170,"column":8},"end":{"line":176,"column":9}},"type":"if","locations":[{"start":{"line":170,"column":8},"end":{"line":176,"column":9}},{"start":{"line":170,"column":8},"end":{"line":176,"column":9}}],"line":170},"34":{"loc":{"start":{"line":172,"column":12},"end":{"line":175,"column":13}},"type":"if","locations":[{"start":{"line":172,"column":12},"end":{"line":175,"column":13}},{"start":{"line":172,"column":12},"end":{"line":175,"column":13}}],"line":172},"35":{"loc":{"start":{"line":172,"column":16},"end":{"line":172,"column":38}},"type":"binary-expr","locations":[{"start":{"line":172,"column":16},"end":{"line":172,"column":27}},{"start":{"line":172,"column":31},"end":{"line":172,"column":38}}],"line":172}},"s":{"0":1,"1":103,"2":103,"3":103,"4":103,"5":98,"6":22,"7":103,"8":0,"9":0,"10":0,"11":1,"12":1,"13":0,"14":1,"15":1,"16":0,"17":1,"18":1,"19":1,"20":103,"21":103,"22":1,"23":1,"24":1,"25":5,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":31,"35":31,"36":31,"37":31,"38":32,"39":6,"40":26,"41":1,"42":25,"43":25,"44":25,"45":25,"46":24,"47":22,"48":22,"49":22,"50":22,"51":22,"52":22,"53":22,"54":0,"55":22,"56":3,"57":32,"58":26,"59":24,"60":24,"61":24,"62":35720,"63":35720,"64":35696,"65":35696,"66":35696,"67":35696,"68":21550,"69":21550,"70":21550,"71":0,"72":0,"73":24,"74":2,"75":22,"76":35696,"77":35696,"78":387720,"79":387720,"80":35696,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":159,"95":154,"96":154,"97":33,"98":121,"99":121,"100":99,"101":99,"102":99,"103":91,"104":0,"105":2,"106":28,"107":3,"108":22,"109":22,"110":22,"111":22,"112":22,"113":22,"114":22,"115":1},"f":{"0":103,"1":22,"2":0,"3":1,"4":0,"5":1,"6":5,"7":31,"8":32,"9":22,"10":32,"11":26,"12":24,"13":35720,"14":35696,"15":387720,"16":0,"17":0,"18":159,"19":3,"20":22},"b":{"0":[1,1,1],"1":[1,0],"2":[103,0],"3":[98,5],"4":[103,103],"5":[5,98],"6":[98,5],"7":[0,0],"8":[1,1,1],"9":[1,0],"10":[1,1,1],"11":[0,1],"12":[1,1],"13":[1,0],"14":[103,0],"15":[103,103],"16":[1,1,1],"17":[4,1],"18":[5,5],"19":[6,26],"20":[1,25],"21":[22,0],"22":[32,32,30],"23":[35696,24],"24":[35720,35719],"25":[21550,14146],"26":[2,22],"27":[0,0],"28":[0,0],"29":[0,0],"30":[33,121],"31":[99,2],"32":[99,0],"33":[22,0],"34":[22,0],"35":[22,22]},"inputSourceMap":{"version":3,"file":"C:/Users/user/Documents/Fourth Year W2023T1/CPSC 310/project_team186/src/controller/InsightFacade.ts","sources":["C:/Users/user/Documents/Fourth Year W2023T1/CPSC 310/project_team186/src/controller/InsightFacade.ts"],"names":[],"mappings":"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","sourcesContent":["import {\r\n\tIInsightFacade,\r\n\tInsightDataset,\r\n\tInsightDatasetKind,\r\n\tInsightError,\r\n\tInsightResult,\r\n\tNotFoundError\r\n} from \"./IInsightFacade\";\r\nimport QueryValidator from \"./QueryValidator\";\r\nimport {QueryObject} from \"./IQueryProcessor\";\r\nimport JSZip from \"jszip\";\r\nimport Section, {JsonSection} from \"./Section\";\r\nimport Dataset from \"./Dataset\";\r\nimport QueryProcessor from \"./QueryProcessor\";\r\nimport * as fs from \"fs\";\r\n\r\n/**\r\n * This is the main programmatic entry point for the project.\r\n * Method documentation is in IInsightFacade\r\n *\r\n */\r\nexport default class InsightFacade implements IInsightFacade {\r\n\tprivate insightDatasets: Map<string, InsightDataset>;\r\n\tprivate datasets: Map<string, Dataset>;\r\n\tprivate queryValidator: QueryValidator;\r\n\tprivate datasetDirectory = \"./src/datasets/\";\r\n\r\n\tconstructor() {\r\n\t\tthis.insightDatasets = new Map<string, InsightDataset>();\r\n\t\tthis.datasets = new Map<string, Dataset>();\r\n\t\tthis.queryValidator = new QueryValidator();\r\n\t\t// console.log(\"InsightFacadeImpl::init()\");\r\n\t}\r\n\r\n\tpublic async addDataset(id: string, content: string, kind: InsightDatasetKind): Promise<string[]> {\r\n\t\tif (this.isInvalidID(id)) {\r\n\t\t\tthrow new InsightError(\"Error adding the dataset: invalid id\");\r\n\t\t}\r\n\r\n\t\tif (this.datasetAlreadyExists(id)) {\r\n\t\t\tthrow new InsightError(\"Error adding the dataset: dataset with id already exists\");\r\n\t\t}\r\n\r\n\t\tthis.datasets.set(id, new Dataset(id));\r\n\r\n\t\ttry {\r\n\t\t\t// unzip and load the content\r\n\t\t\tconst zip = new JSZip();\r\n\t\t\tconst loadedZip = await zip.loadAsync(content, {base64: true});\r\n\r\n\t\t\t// parse data and data modelling\r\n\t\t\tconst parsedData = await this.processZip(loadedZip, id);\r\n\r\n\t\t\t// create InsightDataset object and add to datasets\r\n\t\t\tconst dataset: InsightDataset = {id, kind, numRows: parsedData.length};\r\n\t\t\tthis.insightDatasets.set(id, dataset);\r\n\t\t\tthis.updateInsightDatasets(id);\r\n\r\n\t\t\t// persist processed data structure to disk\r\n\t\t\tconst dataFilePath = this.datasetDirectory.concat(id).concat(\".json\");\r\n\t\t\tfs.writeFile(dataFilePath, JSON.stringify(parsedData), (error) => {\r\n\t\t\t\tif (error) {\r\n\t\t\t\t\tconsole.log(\"Error persisting dataset to disk:\", error);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconsole.log(\"File written successfully to\", dataFilePath);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\treturn Array.from(this.insightDatasets.keys());\r\n\r\n\t\t} catch (error) {\r\n\t\t\treturn Promise.reject(new InsightError(\"Error adding the dataset\"));\r\n\t\t}\r\n\t}\r\n\r\n\tprivate isInvalidID(id: string): boolean {\r\n\t\treturn (id === null) || id.includes(\"_\") || (id.trim().length === 0);\r\n\t}\r\n\r\n\tprivate datasetAlreadyExists(id: string): boolean {\r\n\t\t// return (id in this.insightDatasets);\r\n\t\treturn this.datasets.has(id);\r\n\t}\r\n\r\n\t// this block of code is generated by ChatGPT\r\n\tprivate async processZip(jsZip: JSZip, id: string): Promise<any[]> {\r\n\t\tconst parsedData: any[] = [];\r\n\t\tlet hasValidCourse = false;\r\n\r\n\t\tawait Promise.all(\r\n\t\t\t// (1) get array of all the file entries in zip archive\r\n\t\t\t// (2) iterate over each file entry\r\n\t\t\tObject.values(jsZip.files).map(async (zipEntry) => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\t// console.log(zipEntry);\r\n\t\t\t\t\tif (zipEntry.name.startsWith(\"courses/\") && zipEntry.name !== \"courses/\") {\r\n\t\t\t\t\t\tconst fileContent = await zipEntry.async(\"string\");\r\n\t\t\t\t\t\tconst jsonData = JSON.parse(fileContent);\r\n\r\n\t\t\t\t\t\t// convert courses into a list of Sections, and add them to dataset with id.\r\n\t\t\t\t\t\tlet sectionList = (this.processCourseSections(jsonData.result));\r\n\r\n\t\t\t\t\t\t// check if it contains valid sections\r\n\t\t\t\t\t\tif(sectionList.length > 0) {\r\n\t\t\t\t\t\t\thasValidCourse = true;\r\n\r\n\t\t\t\t\t\t\t// push data object into parsedData array to be returned\r\n\t\t\t\t\t\t\tparsedData.push(jsonData);\r\n\t\t\t\t\t\t\tthis.datasets.get(id)?.addDatasetSections(sectionList);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} catch (error) {\r\n\t\t\t\t\tconsole.error(\"Error parsing JSON for file:\", zipEntry.name);\r\n\t\t\t\t\tconsole.error(\"Error details:\", error);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\tif (!hasValidCourse) {\r\n\t\t\tthrow new InsightError(\"Error adding the dataset: no valid courses\");\r\n\t\t}\r\n\r\n\t\treturn parsedData;\r\n\t}\r\n\r\n\r\n\t// Process each valid section in the \"result\" key\r\n\tprivate processCourseSections(results: JsonSection[]): Section[] {\r\n\t\tconst sectionList: Section[] = [];\r\n\t\t// console.log(results);\r\n\t\tresults.forEach((result) => {\r\n\t\t\tconst section = new Section(result);\r\n\t\t\tsectionList.push(section);\r\n\t\t});\r\n\r\n\t\treturn sectionList;\r\n\t}\r\n\r\n\r\n\tpublic async removeDataset(id: string): Promise<string> {\r\n\t\tif(this.isInvalidID(id)) {\r\n\t\t\t// throw new InsightError(\"Error removing the dataset: invalid id\");\r\n\t\t\treturn Promise.reject(new InsightError(\"Error removing the dataset: invalid id\"));\r\n\t\t}\r\n\r\n\t\tif(!this.datasetAlreadyExists(id)) {\r\n\t\t\t// throw new NotFoundError(\"Error removing the dataset: dataset not found\");\r\n\t\t\treturn Promise.reject(new NotFoundError(\"Error removing the dataset: dataset not found\"));\r\n\t\t}\r\n\r\n\t\ttry {\r\n\t\t\t// remove dataset from memory\r\n\t\t\tthis.insightDatasets.delete(id);\r\n\r\n\t\t\t// remove dataset from disk\r\n\t\t\tconst dataFilePath = this.datasetDirectory.concat(id).concat(\".json\");\r\n\t\t\tfs.unlink(dataFilePath, (error) => {\r\n\t\t\t\tif (error) {\r\n\t\t\t\t\tconsole.log(\"Error removing dataset from disk:\", error);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconsole.log(\"File successfully removed from\", dataFilePath);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\treturn Promise.resolve(id);\r\n\t\t} catch(error) {\r\n\t\t\treturn Promise.reject(new InsightError(\"Error removing the dataset\"));\r\n\t\t}\r\n\t}\r\n\r\n\tpublic performQuery(query: unknown): Promise<InsightResult[]> {\r\n\t\tconst queryingDatasetID = this.queryValidator.getQueryingDatasetIdFromColumns(query as QueryObject);\r\n\t\tlet allDatasetSections = this.datasets.get(queryingDatasetID)?.getAllSections();\r\n\t\tif (!allDatasetSections) {\r\n\t\t\tthrow new InsightError(`Referenced dataset ${queryingDatasetID} not added yet `);\r\n\t\t}\r\n\t\ttry {\r\n\t\t\tif (this.queryValidator.isValidQuery(query)) {\r\n\r\n\t\t\t\tif (allDatasetSections) {\r\n\t\t\t\t\tlet queryProcessor = new QueryProcessor(queryingDatasetID, allDatasetSections);\r\n\t\t\t\t\tconst queryResults = queryProcessor.processQuery(query as QueryObject, allDatasetSections);\r\n\t\t\t\t\treturn Promise.resolve(queryResults);\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn Promise.reject(new InsightError(\"Dataset sections are undefined.\"));\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\treturn Promise.reject(new InsightError(\"Error processing the query\"));\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\treturn Promise.reject(error);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic listDatasets(): Promise<InsightDataset[]> {\r\n\t\treturn Promise.resolve(Array.from(this.insightDatasets.values()));\r\n\t}\r\n\r\n\tprivate updateInsightDatasets(id: string): void {\r\n\t\tlet numRows = this.datasets.get(id)?.getDatasetLength();\r\n\t\tif (this.insightDatasets.has(id)) {\r\n\t\t\tconst currDataset = this.insightDatasets.get(id);\r\n\t\t\tif (currDataset && numRows) {\r\n\t\t\t\tcurrDataset.numRows = numRows;\r\n\t\t\t\tthis.insightDatasets.set(id, currDataset);\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.queryValidator.updateExistingDatasetsIDs(id);\r\n\t}\r\n}\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"81ec3a07c3fab84f6ae9872411df2f2205bc66d9","contentHash":"b8b79e2f146a00ec681cdf455dd5594ba6338997a255f4d660868807cf45818d"},"C:\\Users\\user\\Documents\\Fourth Year W2023T1\\CPSC 310\\project_team186\\src\\controller\\QueryValidator.ts":{"path":"C:\\Users\\user\\Documents\\Fourth Year W2023T1\\CPSC 310\\project_team186\\src\\controller\\QueryValidator.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":25},"end":{"line":3,"column":52}},"2":{"start":{"line":5,"column":22},"end":{"line":5,"column":107}},"3":{"start":{"line":6,"column":17},"end":{"line":6,"column":35}},"4":{"start":{"line":7,"column":17},"end":{"line":7,"column":23}},"5":{"start":{"line":8,"column":18},"end":{"line":8,"column":58}},"6":{"start":{"line":9,"column":18},"end":{"line":9,"column":63}},"7":{"start":{"line":10,"column":23},"end":{"line":10,"column":43}},"8":{"start":{"line":12,"column":24},"end":{"line":12,"column":26}},"9":{"start":{"line":14,"column":8},"end":{"line":14,"column":38}},"10":{"start":{"line":17,"column":32},"end":{"line":17,"column":69}},"11":{"start":{"line":18,"column":24},"end":{"line":18,"column":61}},"12":{"start":{"line":19,"column":31},"end":{"line":19,"column":63}},"13":{"start":{"line":20,"column":8},"end":{"line":20,"column":53}},"14":{"start":{"line":23,"column":8},"end":{"line":28,"column":9}},"15":{"start":{"line":24,"column":12},"end":{"line":24,"column":59}},"16":{"start":{"line":27,"column":12},"end":{"line":27,"column":76}},"17":{"start":{"line":31,"column":28},"end":{"line":31,"column":43}},"18":{"start":{"line":32,"column":29},"end":{"line":32,"column":48}},"19":{"start":{"line":33,"column":34},"end":{"line":33,"column":39}},"20":{"start":{"line":34,"column":8},"end":{"line":39,"column":9}},"21":{"start":{"line":35,"column":12},"end":{"line":35,"column":71}},"22":{"start":{"line":38,"column":12},"end":{"line":38,"column":74}},"23":{"start":{"line":40,"column":8},"end":{"line":40,"column":84}},"24":{"start":{"line":41,"column":27},"end":{"line":41,"column":44}},"25":{"start":{"line":42,"column":32},"end":{"line":42,"column":37}},"26":{"start":{"line":43,"column":8},"end":{"line":48,"column":9}},"27":{"start":{"line":44,"column":12},"end":{"line":44,"column":69}},"28":{"start":{"line":47,"column":12},"end":{"line":47,"column":68}},"29":{"start":{"line":49,"column":8},"end":{"line":49,"column":56}},"30":{"start":{"line":52,"column":24},"end":{"line":52,"column":50}},"31":{"start":{"line":53,"column":8},"end":{"line":61,"column":9}},"32":{"start":{"line":54,"column":12},"end":{"line":54,"column":24}},"33":{"start":{"line":56,"column":13},"end":{"line":61,"column":9}},"34":{"start":{"line":57,"column":12},"end":{"line":57,"column":62}},"35":{"start":{"line":60,"column":12},"end":{"line":60,"column":84}},"36":{"start":{"line":64,"column":8},"end":{"line":72,"column":9}},"37":{"start":{"line":65,"column":12},"end":{"line":65,"column":89}},"38":{"start":{"line":67,"column":13},"end":{"line":72,"column":9}},"39":{"start":{"line":68,"column":31},"end":{"line":68,"column":49}},"40":{"start":{"line":69,"column":12},"end":{"line":71,"column":13}},"41":{"start":{"line":70,"column":16},"end":{"line":70,"column":88}},"42":{"start":{"line":73,"column":8},"end":{"line":77,"column":11}},"43":{"start":{"line":74,"column":12},"end":{"line":76,"column":13}},"44":{"start":{"line":75,"column":16},"end":{"line":75,"column":83}},"45":{"start":{"line":78,"column":8},"end":{"line":82,"column":11}},"46":{"start":{"line":79,"column":12},"end":{"line":81,"column":13}},"47":{"start":{"line":80,"column":16},"end":{"line":80,"column":89}},"48":{"start":{"line":83,"column":8},"end":{"line":83,"column":20}},"49":{"start":{"line":86,"column":34},"end":{"line":86,"column":69}},"50":{"start":{"line":87,"column":37},"end":{"line":87,"column":76}},"51":{"start":{"line":88,"column":8},"end":{"line":88,"column":108}},"52":{"start":{"line":91,"column":8},"end":{"line":91,"column":59}},"53":{"start":{"line":94,"column":8},"end":{"line":94,"column":60}},"54":{"start":{"line":97,"column":20},"end":{"line":97,"column":42}},"55":{"start":{"line":98,"column":27},"end":{"line":98,"column":29}},"56":{"start":{"line":99,"column":8},"end":{"line":118,"column":9}},"57":{"start":{"line":100,"column":12},"end":{"line":105,"column":13}},"58":{"start":{"line":101,"column":16},"end":{"line":101,"column":92}},"59":{"start":{"line":104,"column":16},"end":{"line":104,"column":43}},"60":{"start":{"line":106,"column":12},"end":{"line":111,"column":13}},"61":{"start":{"line":107,"column":33},"end":{"line":107,"column":62}},"62":{"start":{"line":108,"column":16},"end":{"line":110,"column":17}},"63":{"start":{"line":109,"column":20},"end":{"line":109,"column":33}},"64":{"start":{"line":113,"column":13},"end":{"line":118,"column":9}},"65":{"start":{"line":114,"column":12},"end":{"line":114,"column":66}},"66":{"start":{"line":117,"column":12},"end":{"line":117,"column":44}},"67":{"start":{"line":119,"column":8},"end":{"line":119,"column":20}},"68":{"start":{"line":122,"column":24},"end":{"line":122,"column":47}},"69":{"start":{"line":123,"column":22},"end":{"line":123,"column":41}},"70":{"start":{"line":124,"column":8},"end":{"line":135,"column":9}},"71":{"start":{"line":125,"column":12},"end":{"line":131,"column":13}},"72":{"start":{"line":126,"column":16},"end":{"line":126,"column":63}},"73":{"start":{"line":129,"column":16},"end":{"line":130,"column":95}},"74":{"start":{"line":134,"column":12},"end":{"line":134,"column":105}},"75":{"start":{"line":138,"column":8},"end":{"line":138,"column":58}},"76":{"start":{"line":141,"column":32},"end":{"line":141,"column":56}},"77":{"start":{"line":142,"column":31},"end":{"line":142,"column":70}},"78":{"start":{"line":143,"column":8},"end":{"line":148,"column":9}},"79":{"start":{"line":144,"column":12},"end":{"line":144,"column":24}},"80":{"start":{"line":147,"column":12},"end":{"line":147,"column":92}},"81":{"start":{"line":152,"column":23},"end":{"line":152,"column":55}},"82":{"start":{"line":153,"column":21},"end":{"line":153,"column":60}},"83":{"start":{"line":154,"column":8},"end":{"line":161,"column":9}},"84":{"start":{"line":155,"column":32},"end":{"line":155,"column":58}},"85":{"start":{"line":156,"column":12},"end":{"line":157,"column":58}},"86":{"start":{"line":160,"column":12},"end":{"line":160,"column":93}},"87":{"start":{"line":165,"column":34},"end":{"line":165,"column":69}},"88":{"start":{"line":166,"column":8},"end":{"line":171,"column":9}},"89":{"start":{"line":167,"column":12},"end":{"line":167,"column":24}},"90":{"start":{"line":170,"column":12},"end":{"line":170,"column":90}},"91":{"start":{"line":174,"column":8},"end":{"line":192,"column":9}},"92":{"start":{"line":175,"column":12},"end":{"line":180,"column":13}},"93":{"start":{"line":176,"column":16},"end":{"line":176,"column":28}},"94":{"start":{"line":179,"column":16},"end":{"line":179,"column":90}},"95":{"start":{"line":182,"column":13},"end":{"line":192,"column":9}},"96":{"start":{"line":183,"column":12},"end":{"line":188,"column":13}},"97":{"start":{"line":184,"column":16},"end":{"line":184,"column":59}},"98":{"start":{"line":187,"column":16},"end":{"line":187,"column":90}},"99":{"start":{"line":191,"column":12},"end":{"line":191,"column":70}},"100":{"start":{"line":195,"column":8},"end":{"line":213,"column":9}},"101":{"start":{"line":196,"column":12},"end":{"line":201,"column":13}},"102":{"start":{"line":197,"column":16},"end":{"line":197,"column":28}},"103":{"start":{"line":200,"column":16},"end":{"line":200,"column":110}},"104":{"start":{"line":203,"column":13},"end":{"line":213,"column":9}},"105":{"start":{"line":204,"column":12},"end":{"line":209,"column":13}},"106":{"start":{"line":205,"column":16},"end":{"line":205,"column":28}},"107":{"start":{"line":208,"column":16},"end":{"line":208,"column":110}},"108":{"start":{"line":212,"column":12},"end":{"line":212,"column":70}},"109":{"start":{"line":216,"column":8},"end":{"line":243,"column":9}},"110":{"start":{"line":217,"column":24},"end":{"line":217,"column":25}},"111":{"start":{"line":218,"column":28},"end":{"line":218,"column":52}},"112":{"start":{"line":219,"column":12},"end":{"line":223,"column":13}},"113":{"start":{"line":220,"column":16},"end":{"line":222,"column":17}},"114":{"start":{"line":221,"column":20},"end":{"line":221,"column":28}},"115":{"start":{"line":224,"column":12},"end":{"line":242,"column":13}},"116":{"start":{"line":225,"column":16},"end":{"line":225,"column":131}},"117":{"start":{"line":227,"column":17},"end":{"line":242,"column":13}},"118":{"start":{"line":228,"column":16},"end":{"line":233,"column":17}},"119":{"start":{"line":229,"column":20},"end":{"line":229,"column":32}},"120":{"start":{"line":232,"column":20},"end":{"line":232,"column":135}},"121":{"start":{"line":235,"column":17},"end":{"line":242,"column":13}},"122":{"start":{"line":236,"column":16},"end":{"line":241,"column":17}},"123":{"start":{"line":237,"column":20},"end":{"line":237,"column":32}},"124":{"start":{"line":240,"column":20},"end":{"line":240,"column":135}},"125":{"start":{"line":244,"column":8},"end":{"line":244,"column":20}},"126":{"start":{"line":247,"column":8},"end":{"line":247,"column":55}},"127":{"start":{"line":250,"column":8},"end":{"line":250,"column":54}},"128":{"start":{"line":253,"column":24},"end":{"line":253,"column":52}},"129":{"start":{"line":254,"column":8},"end":{"line":262,"column":9}},"130":{"start":{"line":255,"column":12},"end":{"line":255,"column":79}},"131":{"start":{"line":257,"column":13},"end":{"line":262,"column":9}},"132":{"start":{"line":258,"column":12},"end":{"line":258,"column":68}},"133":{"start":{"line":261,"column":12},"end":{"line":261,"column":22}},"134":{"start":{"line":265,"column":8},"end":{"line":265,"column":49}},"135":{"start":{"line":268,"column":0},"end":{"line":268,"column":33}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":13,"column":4},"end":{"line":13,"column":5}},"loc":{"start":{"line":13,"column":18},"end":{"line":15,"column":5}},"line":13},"1":{"name":"(anonymous_1)","decl":{"start":{"line":16,"column":4},"end":{"line":16,"column":5}},"loc":{"start":{"line":16,"column":30},"end":{"line":21,"column":5}},"line":16},"2":{"name":"(anonymous_2)","decl":{"start":{"line":22,"column":4},"end":{"line":22,"column":5}},"loc":{"start":{"line":22,"column":37},"end":{"line":29,"column":5}},"line":22},"3":{"name":"(anonymous_3)","decl":{"start":{"line":30,"column":4},"end":{"line":30,"column":5}},"loc":{"start":{"line":30,"column":38},"end":{"line":50,"column":5}},"line":30},"4":{"name":"(anonymous_4)","decl":{"start":{"line":51,"column":4},"end":{"line":51,"column":5}},"loc":{"start":{"line":51,"column":31},"end":{"line":62,"column":5}},"line":51},"5":{"name":"(anonymous_5)","decl":{"start":{"line":63,"column":4},"end":{"line":63,"column":5}},"loc":{"start":{"line":63,"column":39},"end":{"line":84,"column":5}},"line":63},"6":{"name":"(anonymous_6)","decl":{"start":{"line":73,"column":42},"end":{"line":73,"column":43}},"loc":{"start":{"line":73,"column":51},"end":{"line":77,"column":9}},"line":73},"7":{"name":"(anonymous_7)","decl":{"start":{"line":78,"column":37},"end":{"line":78,"column":38}},"loc":{"start":{"line":78,"column":46},"end":{"line":82,"column":9}},"line":78},"8":{"name":"(anonymous_8)","decl":{"start":{"line":85,"column":4},"end":{"line":85,"column":5}},"loc":{"start":{"line":85,"column":30},"end":{"line":89,"column":5}},"line":85},"9":{"name":"(anonymous_9)","decl":{"start":{"line":90,"column":4},"end":{"line":90,"column":5}},"loc":{"start":{"line":90,"column":39},"end":{"line":92,"column":5}},"line":90},"10":{"name":"(anonymous_10)","decl":{"start":{"line":93,"column":4},"end":{"line":93,"column":5}},"loc":{"start":{"line":93,"column":33},"end":{"line":95,"column":5}},"line":93},"11":{"name":"(anonymous_11)","decl":{"start":{"line":96,"column":4},"end":{"line":96,"column":5}},"loc":{"start":{"line":96,"column":42},"end":{"line":120,"column":5}},"line":96},"12":{"name":"(anonymous_12)","decl":{"start":{"line":121,"column":4},"end":{"line":121,"column":5}},"loc":{"start":{"line":121,"column":21},"end":{"line":136,"column":5}},"line":121},"13":{"name":"(anonymous_13)","decl":{"start":{"line":137,"column":4},"end":{"line":137,"column":5}},"loc":{"start":{"line":137,"column":36},"end":{"line":139,"column":5}},"line":137},"14":{"name":"(anonymous_14)","decl":{"start":{"line":140,"column":4},"end":{"line":140,"column":5}},"loc":{"start":{"line":140,"column":36},"end":{"line":149,"column":5}},"line":140},"15":{"name":"(anonymous_15)","decl":{"start":{"line":151,"column":4},"end":{"line":151,"column":5}},"loc":{"start":{"line":151,"column":44},"end":{"line":162,"column":5}},"line":151},"16":{"name":"(anonymous_16)","decl":{"start":{"line":164,"column":4},"end":{"line":164,"column":5}},"loc":{"start":{"line":164,"column":38},"end":{"line":172,"column":5}},"line":164},"17":{"name":"(anonymous_17)","decl":{"start":{"line":173,"column":4},"end":{"line":173,"column":5}},"loc":{"start":{"line":173,"column":54},"end":{"line":193,"column":5}},"line":173},"18":{"name":"(anonymous_18)","decl":{"start":{"line":194,"column":4},"end":{"line":194,"column":5}},"loc":{"start":{"line":194,"column":45},"end":{"line":214,"column":5}},"line":194},"19":{"name":"(anonymous_19)","decl":{"start":{"line":215,"column":4},"end":{"line":215,"column":5}},"loc":{"start":{"line":215,"column":35},"end":{"line":245,"column":5}},"line":215},"20":{"name":"(anonymous_20)","decl":{"start":{"line":246,"column":4},"end":{"line":246,"column":5}},"loc":{"start":{"line":246,"column":34},"end":{"line":248,"column":5}},"line":246},"21":{"name":"(anonymous_21)","decl":{"start":{"line":249,"column":4},"end":{"line":249,"column":5}},"loc":{"start":{"line":249,"column":30},"end":{"line":251,"column":5}},"line":249},"22":{"name":"(anonymous_22)","decl":{"start":{"line":252,"column":4},"end":{"line":252,"column":5}},"loc":{"start":{"line":252,"column":49},"end":{"line":263,"column":5}},"line":252},"23":{"name":"(anonymous_23)","decl":{"start":{"line":264,"column":4},"end":{"line":264,"column":5}},"loc":{"start":{"line":264,"column":41},"end":{"line":266,"column":5}},"line":264}},"branchMap":{"0":{"loc":{"start":{"line":20,"column":15},"end":{"line":20,"column":52}},"type":"binary-expr","locations":[{"start":{"line":20,"column":15},"end":{"line":20,"column":32}},{"start":{"line":20,"column":36},"end":{"line":20,"column":52}}],"line":20},"1":{"loc":{"start":{"line":34,"column":8},"end":{"line":39,"column":9}},"type":"if","locations":[{"start":{"line":34,"column":8},"end":{"line":39,"column":9}},{"start":{"line":34,"column":8},"end":{"line":39,"column":9}}],"line":34},"2":{"loc":{"start":{"line":43,"column":8},"end":{"line":48,"column":9}},"type":"if","locations":[{"start":{"line":43,"column":8},"end":{"line":48,"column":9}},{"start":{"line":43,"column":8},"end":{"line":48,"column":9}}],"line":43},"3":{"loc":{"start":{"line":49,"column":15},"end":{"line":49,"column":55}},"type":"binary-expr","locations":[{"start":{"line":49,"column":15},"end":{"line":49,"column":32}},{"start":{"line":49,"column":36},"end":{"line":49,"column":55}}],"line":49},"4":{"loc":{"start":{"line":53,"column":8},"end":{"line":61,"column":9}},"type":"if","locations":[{"start":{"line":53,"column":8},"end":{"line":61,"column":9}},{"start":{"line":53,"column":8},"end":{"line":61,"column":9}}],"line":53},"5":{"loc":{"start":{"line":56,"column":13},"end":{"line":61,"column":9}},"type":"if","locations":[{"start":{"line":56,"column":13},"end":{"line":61,"column":9}},{"start":{"line":56,"column":13},"end":{"line":61,"column":9}}],"line":56},"6":{"loc":{"start":{"line":64,"column":8},"end":{"line":72,"column":9}},"type":"if","locations":[{"start":{"line":64,"column":8},"end":{"line":72,"column":9}},{"start":{"line":64,"column":8},"end":{"line":72,"column":9}}],"line":64},"7":{"loc":{"start":{"line":67,"column":13},"end":{"line":72,"column":9}},"type":"if","locations":[{"start":{"line":67,"column":13},"end":{"line":72,"column":9}},{"start":{"line":67,"column":13},"end":{"line":72,"column":9}}],"line":67},"8":{"loc":{"start":{"line":69,"column":12},"end":{"line":71,"column":13}},"type":"if","locations":[{"start":{"line":69,"column":12},"end":{"line":71,"column":13}},{"start":{"line":69,"column":12},"end":{"line":71,"column":13}}],"line":69},"9":{"loc":{"start":{"line":74,"column":12},"end":{"line":76,"column":13}},"type":"if","locations":[{"start":{"line":74,"column":12},"end":{"line":76,"column":13}},{"start":{"line":74,"column":12},"end":{"line":76,"column":13}}],"line":74},"10":{"loc":{"start":{"line":79,"column":12},"end":{"line":81,"column":13}},"type":"if","locations":[{"start":{"line":79,"column":12},"end":{"line":81,"column":13}},{"start":{"line":79,"column":12},"end":{"line":81,"column":13}}],"line":79},"11":{"loc":{"start":{"line":88,"column":15},"end":{"line":88,"column":107}},"type":"binary-expr","locations":[{"start":{"line":88,"column":15},"end":{"line":88,"column":56}},{"start":{"line":88,"column":60},"end":{"line":88,"column":107}}],"line":88},"12":{"loc":{"start":{"line":99,"column":8},"end":{"line":118,"column":9}},"type":"if","locations":[{"start":{"line":99,"column":8},"end":{"line":118,"column":9}},{"start":{"line":99,"column":8},"end":{"line":118,"column":9}}],"line":99},"13":{"loc":{"start":{"line":99,"column":12},"end":{"line":99,"column":41}},"type":"binary-expr","locations":[{"start":{"line":99,"column":12},"end":{"line":99,"column":25}},{"start":{"line":99,"column":29},"end":{"line":99,"column":41}}],"line":99},"14":{"loc":{"start":{"line":100,"column":12},"end":{"line":105,"column":13}},"type":"if","locations":[{"start":{"line":100,"column":12},"end":{"line":105,"column":13}},{"start":{"line":100,"column":12},"end":{"line":105,"column":13}}],"line":100},"15":{"loc":{"start":{"line":100,"column":16},"end":{"line":100,"column":57}},"type":"binary-expr","locations":[{"start":{"line":100,"column":16},"end":{"line":100,"column":28}},{"start":{"line":100,"column":32},"end":{"line":100,"column":57}}],"line":100},"16":{"loc":{"start":{"line":108,"column":16},"end":{"line":110,"column":17}},"type":"if","locations":[{"start":{"line":108,"column":16},"end":{"line":110,"column":17}},{"start":{"line":108,"column":16},"end":{"line":110,"column":17}}],"line":108},"17":{"loc":{"start":{"line":113,"column":13},"end":{"line":118,"column":9}},"type":"if","locations":[{"start":{"line":113,"column":13},"end":{"line":118,"column":9}},{"start":{"line":113,"column":13},"end":{"line":118,"column":9}}],"line":113},"18":{"loc":{"start":{"line":113,"column":17},"end":{"line":113,"column":44}},"type":"binary-expr","locations":[{"start":{"line":113,"column":17},"end":{"line":113,"column":30}},{"start":{"line":113,"column":34},"end":{"line":113,"column":44}}],"line":113},"19":{"loc":{"start":{"line":124,"column":8},"end":{"line":135,"column":9}},"type":"if","locations":[{"start":{"line":124,"column":8},"end":{"line":135,"column":9}},{"start":{"line":124,"column":8},"end":{"line":135,"column":9}}],"line":124},"20":{"loc":{"start":{"line":125,"column":12},"end":{"line":131,"column":13}},"type":"if","locations":[{"start":{"line":125,"column":12},"end":{"line":131,"column":13}},{"start":{"line":125,"column":12},"end":{"line":131,"column":13}}],"line":125},"21":{"loc":{"start":{"line":125,"column":16},"end":{"line":125,"column":74}},"type":"binary-expr","locations":[{"start":{"line":125,"column":16},"end":{"line":125,"column":33}},{"start":{"line":125,"column":37},"end":{"line":125,"column":53}},{"start":{"line":125,"column":57},"end":{"line":125,"column":74}}],"line":125},"22":{"loc":{"start":{"line":129,"column":23},"end":{"line":130,"column":94}},"type":"binary-expr","locations":[{"start":{"line":129,"column":23},"end":{"line":129,"column":55}},{"start":{"line":130,"column":20},"end":{"line":130,"column":50}},{"start":{"line":130,"column":54},"end":{"line":130,"column":94}}],"line":129},"23":{"loc":{"start":{"line":143,"column":8},"end":{"line":148,"column":9}},"type":"if","locations":[{"start":{"line":143,"column":8},"end":{"line":148,"column":9}},{"start":{"line":143,"column":8},"end":{"line":148,"column":9}}],"line":143},"24":{"loc":{"start":{"line":154,"column":8},"end":{"line":161,"column":9}},"type":"if","locations":[{"start":{"line":154,"column":8},"end":{"line":161,"column":9}},{"start":{"line":154,"column":8},"end":{"line":161,"column":9}}],"line":154},"25":{"loc":{"start":{"line":156,"column":19},"end":{"line":157,"column":57}},"type":"binary-expr","locations":[{"start":{"line":156,"column":19},"end":{"line":156,"column":70}},{"start":{"line":156,"column":74},"end":{"line":156,"column":118}},{"start":{"line":157,"column":19},"end":{"line":157,"column":57}}],"line":156},"26":{"loc":{"start":{"line":166,"column":8},"end":{"line":171,"column":9}},"type":"if","locations":[{"start":{"line":166,"column":8},"end":{"line":171,"column":9}},{"start":{"line":166,"column":8},"end":{"line":171,"column":9}}],"line":166},"27":{"loc":{"start":{"line":174,"column":8},"end":{"line":192,"column":9}},"type":"if","locations":[{"start":{"line":174,"column":8},"end":{"line":192,"column":9}},{"start":{"line":174,"column":8},"end":{"line":192,"column":9}}],"line":174},"28":{"loc":{"start":{"line":175,"column":12},"end":{"line":180,"column":13}},"type":"if","locations":[{"start":{"line":175,"column":12},"end":{"line":180,"column":13}},{"start":{"line":175,"column":12},"end":{"line":180,"column":13}}],"line":175},"29":{"loc":{"start":{"line":182,"column":13},"end":{"line":192,"column":9}},"type":"if","locations":[{"start":{"line":182,"column":13},"end":{"line":192,"column":9}},{"start":{"line":182,"column":13},"end":{"line":192,"column":9}}],"line":182},"30":{"loc":{"start":{"line":183,"column":12},"end":{"line":188,"column":13}},"type":"if","locations":[{"start":{"line":183,"column":12},"end":{"line":188,"column":13}},{"start":{"line":183,"column":12},"end":{"line":188,"column":13}}],"line":183},"31":{"loc":{"start":{"line":195,"column":8},"end":{"line":213,"column":9}},"type":"if","locations":[{"start":{"line":195,"column":8},"end":{"line":213,"column":9}},{"start":{"line":195,"column":8},"end":{"line":213,"column":9}}],"line":195},"32":{"loc":{"start":{"line":196,"column":12},"end":{"line":201,"column":13}},"type":"if","locations":[{"start":{"line":196,"column":12},"end":{"line":201,"column":13}},{"start":{"line":196,"column":12},"end":{"line":201,"column":13}}],"line":196},"33":{"loc":{"start":{"line":203,"column":13},"end":{"line":213,"column":9}},"type":"if","locations":[{"start":{"line":203,"column":13},"end":{"line":213,"column":9}},{"start":{"line":203,"column":13},"end":{"line":213,"column":9}}],"line":203},"34":{"loc":{"start":{"line":204,"column":12},"end":{"line":209,"column":13}},"type":"if","locations":[{"start":{"line":204,"column":12},"end":{"line":209,"column":13}},{"start":{"line":204,"column":12},"end":{"line":209,"column":13}}],"line":204},"35":{"loc":{"start":{"line":216,"column":8},"end":{"line":243,"column":9}},"type":"if","locations":[{"start":{"line":216,"column":8},"end":{"line":243,"column":9}},{"start":{"line":216,"column":8},"end":{"line":243,"column":9}}],"line":216},"36":{"loc":{"start":{"line":220,"column":16},"end":{"line":222,"column":17}},"type":"if","locations":[{"start":{"line":220,"column":16},"end":{"line":222,"column":17}},{"start":{"line":220,"column":16},"end":{"line":222,"column":17}}],"line":220},"37":{"loc":{"start":{"line":224,"column":12},"end":{"line":242,"column":13}},"type":"if","locations":[{"start":{"line":224,"column":12},"end":{"line":242,"column":13}},{"start":{"line":224,"column":12},"end":{"line":242,"column":13}}],"line":224},"38":{"loc":{"start":{"line":227,"column":17},"end":{"line":242,"column":13}},"type":"if","locations":[{"start":{"line":227,"column":17},"end":{"line":242,"column":13}},{"start":{"line":227,"column":17},"end":{"line":242,"column":13}}],"line":227},"39":{"loc":{"start":{"line":228,"column":16},"end":{"line":233,"column":17}},"type":"if","locations":[{"start":{"line":228,"column":16},"end":{"line":233,"column":17}},{"start":{"line":228,"column":16},"end":{"line":233,"column":17}}],"line":228},"40":{"loc":{"start":{"line":228,"column":20},"end":{"line":228,"column":100}},"type":"binary-expr","locations":[{"start":{"line":228,"column":20},"end":{"line":228,"column":52}},{"start":{"line":228,"column":56},"end":{"line":228,"column":100}}],"line":228},"41":{"loc":{"start":{"line":235,"column":17},"end":{"line":242,"column":13}},"type":"if","locations":[{"start":{"line":235,"column":17},"end":{"line":242,"column":13}},{"start":{"line":235,"column":17},"end":{"line":242,"column":13}}],"line":235},"42":{"loc":{"start":{"line":236,"column":16},"end":{"line":241,"column":17}},"type":"if","locations":[{"start":{"line":236,"column":16},"end":{"line":241,"column":17}},{"start":{"line":236,"column":16},"end":{"line":241,"column":17}}],"line":236},"43":{"loc":{"start":{"line":236,"column":20},"end":{"line":236,"column":100}},"type":"binary-expr","locations":[{"start":{"line":236,"column":20},"end":{"line":236,"column":52}},{"start":{"line":236,"column":56},"end":{"line":236,"column":100}}],"line":236},"44":{"loc":{"start":{"line":254,"column":8},"end":{"line":262,"column":9}},"type":"if","locations":[{"start":{"line":254,"column":8},"end":{"line":262,"column":9}},{"start":{"line":254,"column":8},"end":{"line":262,"column":9}}],"line":254},"45":{"loc":{"start":{"line":257,"column":13},"end":{"line":262,"column":9}},"type":"if","locations":[{"start":{"line":257,"column":13},"end":{"line":262,"column":9}},{"start":{"line":257,"column":13},"end":{"line":262,"column":9}}],"line":257}},"s":{"0":1,"1":1,"2":36,"3":36,"4":36,"5":36,"6":36,"7":36,"8":36,"9":36,"10":157,"11":157,"12":157,"13":101,"14":317,"15":317,"16":0,"17":157,"18":157,"19":157,"20":157,"21":1,"22":156,"23":111,"24":111,"25":111,"26":111,"27":2,"28":109,"29":101,"30":109,"31":109,"32":4,"33":105,"34":105,"35":0,"36":156,"37":0,"38":156,"39":124,"40":124,"41":3,"42":153,"43":276,"44":2,"45":151,"46":688,"47":40,"48":111,"49":688,"50":688,"51":688,"52":648,"53":688,"54":155,"55":155,"56":155,"57":94,"58":0,"59":94,"60":94,"61":196,"62":186,"63":4,"64":61,"65":31,"66":30,"67":80,"68":226,"69":226,"70":226,"71":226,"72":19,"73":207,"74":0,"75":207,"76":205,"77":205,"78":205,"79":205,"80":0,"81":205,"82":205,"83":205,"84":205,"85":205,"86":0,"87":199,"88":199,"89":197,"90":2,"91":205,"92":116,"93":116,"94":0,"95":89,"96":89,"97":89,"98":0,"99":0,"100":201,"101":85,"102":83,"103":2,"104":116,"105":116,"106":116,"107":0,"108":0,"109":89,"110":87,"111":87,"112":87,"113":263,"114":130,"115":87,"116":2,"117":85,"118":53,"119":53,"120":0,"121":32,"122":18,"123":16,"124":2,"125":16,"126":893,"127":998,"128":159,"129":159,"130":5,"131":154,"132":148,"133":6,"134":22,"135":1},"f":{"0":36,"1":157,"2":317,"3":157,"4":109,"5":156,"6":276,"7":688,"8":688,"9":648,"10":688,"11":155,"12":226,"13":207,"14":205,"15":205,"16":199,"17":205,"18":201,"19":89,"20":893,"21":998,"22":159,"23":22},"b":{"0":[101,101],"1":[1,156],"2":[2,109],"3":[101,99],"4":[4,105],"5":[105,0],"6":[0,156],"7":[124,32],"8":[3,121],"9":[2,274],"10":[40,648],"11":[688,648],"12":[94,61],"13":[155,116],"14":[0,94],"15":[94,94],"16":[4,182],"17":[31,30],"18":[61,31],"19":[226,0],"20":[19,207],"21":[226,212,208],"22":[207,205,205],"23":[205,0],"24":[205,0],"25":[205,201,199],"26":[197,2],"27":[116,89],"28":[116,0],"29":[89,0],"30":[89,0],"31":[85,116],"32":[83,2],"33":[116,0],"34":[116,0],"35":[87,2],"36":[130,133],"37":[2,85],"38":[53,32],"39":[53,0],"40":[53,53],"41":[18,14],"42":[16,2],"43":[18,14],"44":[5,154],"45":[148,6]},"inputSourceMap":{"version":3,"file":"C:/Users/user/Documents/Fourth Year W2023T1/CPSC 310/project_team186/src/controller/QueryValidator.ts","sources":["C:/Users/user/Documents/Fourth Year W2023T1/CPSC 310/project_team186/src/controller/QueryValidator.ts"],"names":[],"mappings":"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","sourcesContent":["import {InsightError} from \"./IInsightFacade\";\r\nimport {Filter, KeyJSON, Options, QueryObject} from \"./IQueryProcessor\";\r\nimport {query} from \"express\";\r\n\r\nexport default class QueryValidator {\r\n\tprivate validKeyStrings = [\"uuid\", \"id\", \"title\", \"instructor\", \"dept\", \"year\", \"avg\", \"pass\", \"fail\", \"audit\"];\r\n\tprivate numberKeys = [\"GT\", \"LT\", \"EQ\"];\r\n\tprivate stringKeys = [\"IS\"];\r\n\tprivate numberTypes = [\"year\", \"avg\", \"pass\", \"fail\", \"audit\"];\r\n\tprivate stringTypes = [\"uuid\", \"id\", \"title\", \"instructor\", \"dept\"];\r\n\tprivate validOptionsKeys = [\"COLUMNS\", \"ORDER\"];\r\n\tprivate existingDatasetsIDs: string[];\r\n\tprivate queryingDatasetID: string = \"\";\r\n\r\n\tconstructor() {\r\n\t\tthis.existingDatasetsIDs = [];\r\n\t}\r\n\r\n    /*\r\n        Takes in an unknown query object, and checks if it can be parsed into a json object.\r\n     */\r\n\tpublic isValidQuery(queryObject: unknown): boolean {\r\n\t\tlet isValidJsonObject = this.parseIntoJsonObject(queryObject);\r\n\t\tlet jsonQuery = this.parseIntoJsonObject(queryObject);\r\n\t\tlet isValidJsonQuery = this.isValidJsonQuery(jsonQuery);\r\n\t\treturn isValidJsonObject && isValidJsonQuery;\r\n\t}\r\n\r\n\tpublic parseIntoJsonObject(queryObject: unknown): JSON {\r\n\t\ttry {\r\n\t\t\treturn JSON.parse(JSON.stringify(queryObject));\r\n\t\t} catch (error) {\r\n\t\t\tthrow new InsightError(\"Invalid query string\");\r\n\t\t}\r\n\t}\r\n\r\n    /*\r\n        Assume correctly parsed JSON object.\r\n     */\r\n\tprivate isValidJsonQuery(queryJsonObject: JSON): boolean {\r\n\t\tconst queryObject = queryJsonObject as QueryObject;\r\n\r\n\t\t// \"OPTIONS\":\r\n\t\tconst optionsBlock = queryObject.OPTIONS;\r\n\t\tlet isValidOptionsBlock = false;\r\n\t\tif (!optionsBlock) {\r\n\t\t\tthrow new InsightError(\"Missing OPTIONS\");\r\n\t\t} else {\r\n\t\t\tisValidOptionsBlock = this.validateOptionsBlock(optionsBlock);\r\n\t\t}\r\n\r\n\t\t// set this.queryingDatasetID from the first item in COLUMNS (since COLUMNS must exist in a query)\r\n\t\tthis.queryingDatasetID = this.getQueryingDatasetID(optionsBlock.COLUMNS[0]);\r\n\r\n        // \"WHERE\":\r\n\t\tconst whereBlock = queryObject.WHERE;\r\n\t\tlet isValidWhereBlock = false;\r\n\t\tif (!whereBlock) {\r\n\t\t\tthrow new InsightError(\"Missing WHERE\");\r\n\t\t} else {\r\n\t\t\tisValidWhereBlock = this.validateWhereBlock(whereBlock);\r\n\t\t}\r\n\r\n\t\treturn isValidWhereBlock && isValidOptionsBlock;\r\n\t}\r\n\r\n\t/*\r\n\t        Valid: Only one key or zero key (ResultTooBigError) allowed in WHERE key\r\n\t */\r\n\tprivate validateWhereBlock(filter: Filter): boolean {\r\n\t\tconst numKeys = Object.keys(filter).length;\r\n\t\tif (numKeys === 0) {\r\n\t\t\treturn true;\r\n\t\t} else if (numKeys === 1) {\r\n\t\t\treturn this.validateFilterLogicComparison(filter);\r\n\t\t} else {\r\n\t\t\tthrow new InsightError(\"WHERE should only have 1 key\");\r\n\t\t}\r\n\t}\r\n\r\n\tprivate validateOptionsBlock(optionsBlock: Options): boolean {\r\n\t\tif (!optionsBlock.COLUMNS) {\r\n\t\t\tthrow new InsightError(\"COLUMNS must be a non-empty array\");\r\n\t\t} else if (optionsBlock.ORDER) {\r\n\t\t\tconst optionsKey = optionsBlock.ORDER;\r\n\t\t\tif (!optionsBlock.COLUMNS.includes(optionsKey)){\r\n\t\t\t\tthrow new InsightError(\"ORDER key must be in COLUMNS\");\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Check for keys in Options that are not one of \"validOptionsKey\"\r\n\t\tObject.keys(optionsBlock).forEach((key) => {\r\n\t\t\tif (!this.validOptionsKeys.includes(key)) {\r\n\t\t\t\tthrow new InsightError(\"Invalid keys in OPTIONS\");\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t// validates each key in COLUMNS\r\n\t\toptionsBlock.COLUMNS.forEach((key) => {\r\n\t\t\tif (!this.isValidInnerKey(key)) {\r\n\t\t\t\tthrow new InsightError(`Invalid key ${key} in COLUMNS`);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t// Valid innerKey follows the structure of \"{existingDataset}_{keyField}\"\r\n\t// InnerKey example: \"sections_dept\"\r\n\tprivate isValidInnerKey(innerKey: string): boolean {\r\n\t\tconst queryingDatasetID = this.getQueryingDatasetID(innerKey);\r\n\t\tconst queryingSectionField = this.getStringAfterUnderscore(innerKey);\r\n\t\treturn this.isExistingDataset(queryingDatasetID) && this.isValidInnerKeyField(queryingSectionField);\r\n\t}\r\n\r\n\tprivate isValidInnerKeyField(sectionField: string): boolean {\r\n\t\treturn this.validKeyStrings.includes(sectionField);\r\n\t}\r\n\r\n\tprivate isExistingDataset(datasetID: string) {\r\n\t\treturn this.existingDatasetsIDs.includes(datasetID);\r\n\t}\r\n\r\n\tprivate validateFilterLogicComparison(filter: Filter): boolean {\r\n\t\tconst key = Object.keys(filter)[0]; // assume only one filter\r\n\t\tlet arrayFilters: Filter[] = [];\r\n\r\n\t\tif (key === \"AND\" || key === \"OR\") {\r\n\t\t\tif (!filter[key] || filter[key]?.length === 0) {\r\n\t\t\t\tthrow new InsightError(`${key} must be a non-empty array`);\r\n\t\t\t} else {\r\n\t\t\t\tarrayFilters = filter[key] as Filter[];\r\n\t\t\t}\r\n\t\t\tfor (const andOrFilter of arrayFilters) {\r\n\t\t\t\tlet isValidKey = this.validateKey(andOrFilter as JSON);\r\n\t\t\t\tif (!isValidKey) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else if (key === \"NOT\" && filter.NOT) {\r\n\t\t\treturn this.validateFilterLogicComparison(filter.NOT);\r\n\t\t} else {\r\n\t\t\treturn this.validateKey(filter as JSON);\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/*\r\n\t\tValid: only one key in each element in array filters (AND, OR);\r\n\t\t\t   else one pair of {key: innerKey} in object filters (GT, LT, EQ, NOT)\r\n\t */\r\n\tprivate validateKey(key: JSON): boolean {\r\n\t\tconst numKeys = Object.keys(key).length;\r\n\t\tlet keyName = Object.keys(key)[0];\r\n\t\tif (numKeys === 1) { // validate key length, should only have 1 key in each object\r\n\t\t\tif (keyName === \"AND\" || keyName === \"OR\" || keyName === \"NOT\") {\r\n\t\t\t\treturn this.validateFilterLogicComparison(key as Filter);\r\n\t\t\t} else {\r\n\t\t\t\treturn this.hasOnlyOneKey(key as unknown as KeyJSON, keyName) &&\r\n\t\t\t\t\tthis.isValidFilterKey(keyName) && this.isValidInnerKeyString(key as unknown as KeyJSON, keyName);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthrow new InsightError(`${keyName} should only have 1 key, has ${numKeys}`);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate hasOnlyOneKey(keyJson: KeyJSON, keyName: string): boolean {\r\n\t\treturn Object.keys(keyJson[keyName]).length === 1;\r\n\t}\r\n\r\n\tprivate isValidFilterKey(comparatorKey: string): boolean {\r\n\t\tconst validFilterKeys = [\"GT\", \"LT\", \"EQ\", \"IS\"];\r\n\t\tlet isValidFilterKey = validFilterKeys.includes(comparatorKey);\r\n\t\tif (isValidFilterKey) {\r\n\t\t\treturn true;\r\n\t\t} else {\r\n\t\t\tthrow new InsightError(`Invalid filter key: ${comparatorKey}`);\r\n\t\t}\r\n\t};\r\n\r\n\tprivate isValidInnerKeyString(keyJSON: KeyJSON, keyName: string): boolean {\r\n\t\tlet innerKey = Object.keys(keyJSON[keyName])[0];\r\n\t\tlet keyStr = this.getStringAfterUnderscore(innerKey);\r\n\t\tif (this.validKeyStrings.includes(keyStr)) {\r\n\t\t\tlet innerKeyValue = keyJSON[keyName][innerKey];\r\n\t\t\treturn this.isValidKeyType(keyName, keyStr, innerKeyValue) && this.isValidValueType(innerKeyValue, keyStr)\r\n\t\t\t\t&& this.isQueryingSameDatasetID(innerKey);\r\n\t\t} else {\r\n\t\t\tthrow new InsightError(`Invalid key ${innerKey} in ${keyName}`);\r\n\t\t}\r\n\t};\r\n\r\n\tprivate isQueryingSameDatasetID(innerKey: string): boolean {\r\n\t\tconst queryingDatasetID = this.getQueryingDatasetID(innerKey);\r\n\t\tif (queryingDatasetID === this.queryingDatasetID) {\r\n\t\t\treturn true;\r\n\t\t} else {\r\n\t\t\tthrow new InsightError(\"Cannot query more than one dataset\");\r\n\t\t}\r\n\t}\r\n\r\n    /*\r\n        e.g. returns true \"GT\" (\"GT\": keyName) with \"sections_avg\" (\"avg\": keyString);\r\n        throws error \"GT\" with \"sections_dept\".\r\n     */\r\n\tprivate isValidKeyType(keyName: string, keyString: string, innerKeyValue: any): boolean {\r\n\t\tif (this.numberKeys.includes(keyName)) {\r\n\t\t\tif (this.numberTypes.includes(keyString)) {\r\n\t\t\t\treturn true;\r\n\t\t\t} else {\r\n\t\t\t\tthrow new InsightError(`Invalid key type in ${keyName}`);\r\n\t\t\t}\r\n\t\t} else if (this.stringKeys.includes(keyName)) {\r\n\t\t\tif (this.stringTypes.includes(keyString)) {\r\n\t\t\t\treturn this.isValidWildcard(innerKeyValue);\r\n\t\t\t} else {\r\n\t\t\t\tthrow new InsightError(`Invalid key type in ${keyName}`);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthrow new InsightError(\"UNEXPECTED KEY\");\r\n\t\t}\r\n\t}\r\n\r\n\tprivate isValidValueType(innerKeyValue: any, keyName: string): boolean {\r\n\t\tif (this.stringTypes.includes(keyName)) {\r\n\t\t\tif (typeof innerKeyValue === \"string\") {\r\n\t\t\t\treturn true;\r\n\t\t\t} else {\r\n\t\t\t\tthrow new InsightError(`Invalid value type in ${keyName}, should be string`);\r\n\t\t\t}\r\n\t\t} else if (this.numberTypes.includes(keyName)) {\r\n\t\t\tif (typeof innerKeyValue === \"number\") {\r\n\t\t\t\treturn true;\r\n\t\t\t} else {\r\n\t\t\t\tthrow new InsightError(`Invalid value type in ${keyName}, should be number`);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthrow new InsightError(\"UNEXPECTED KEY\");\r\n\t\t}\r\n\t}\r\n\r\n\tprivate isValidWildcard(innerKeyValue: string): boolean {\r\n\t\tif (innerKeyValue.length > 1) {\r\n\t\t\tlet count = 0;\r\n\t\t\tlet lastIndex = innerKeyValue.length - 1;\r\n\t\t\tfor (let char of innerKeyValue) {\r\n\t\t\t\tif (char === \"*\") {\r\n\t\t\t\t\tcount++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (count > 2) {\r\n\t\t\t\tthrow new InsightError(\"Asterisks (*) can only be the first or last characters of input strings\");\r\n\t\t\t} else if (count === 2) {\r\n\t\t\t\tif (innerKeyValue.indexOf(\"*\") === 0 && innerKeyValue.lastIndexOf(\"*\") === lastIndex) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthrow new InsightError(\"Asterisks (*) can only be the first or last characters of input strings\");\r\n\t\t\t\t}\r\n\t\t\t} else if (count === 1) {\r\n\t\t\t\tif (innerKeyValue.indexOf(\"*\") === 0 || innerKeyValue.lastIndexOf(\"*\") === lastIndex) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthrow new InsightError(\"Asterisks (*) can only be the first or last characters of input strings\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\t// String after underscore is the querying section field\r\n\tprivate getStringAfterUnderscore(str: string): string {\r\n\t\treturn str.substring(str.lastIndexOf(\"_\") + 1);\r\n\t}\r\n\r\n\t// String before underscore is the querying dataset id\r\n\tprivate getQueryingDatasetID(str: string): string {\r\n\t\treturn str.substring(0, str.lastIndexOf(\"_\"));\r\n\t}\r\n\r\n\tpublic getQueryingDatasetIdFromColumns(queryObject: QueryObject): string {\r\n\t\tconst columns = queryObject.OPTIONS?.COLUMNS;\r\n\t\tif (!columns) {\r\n\t\t\tthrow new InsightError(\"OPTIONS missing COLUMNS\");\r\n\t\t} else if (columns[0]) {\r\n\t\t\treturn columns[0].substring(0, columns[0].indexOf(\"_\"));\r\n\t\t} else {\r\n\t\t\treturn \"\";\r\n\t\t}\r\n\t}\r\n\r\n\tpublic updateExistingDatasetsIDs(datasetID: string): void {\r\n\t\tthis.existingDatasetsIDs.push(datasetID);\r\n\t}\r\n\r\n}\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"a5add563e67f7e2743e3050c87e312baa206b81f","contentHash":"f37966123024b4acb24ecdbd4d16f0e829b0df5f1c40c0d59517b86c3b9689d2"},"C:\\Users\\user\\Documents\\Fourth Year W2023T1\\CPSC 310\\project_team186\\src\\controller\\Section.ts":{"path":"C:\\Users\\user\\Documents\\Fourth Year W2023T1\\CPSC 310\\project_team186\\src\\controller\\Section.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":15,"column":8},"end":{"line":15,"column":45}},"2":{"start":{"line":16,"column":8},"end":{"line":16,"column":36}},"3":{"start":{"line":17,"column":8},"end":{"line":17,"column":38}},"4":{"start":{"line":18,"column":8},"end":{"line":18,"column":47}},"5":{"start":{"line":19,"column":8},"end":{"line":19,"column":39}},"6":{"start":{"line":20,"column":8},"end":{"line":25,"column":9}},"7":{"start":{"line":21,"column":12},"end":{"line":21,"column":29}},"8":{"start":{"line":24,"column":12},"end":{"line":24,"column":52}},"9":{"start":{"line":26,"column":8},"end":{"line":26,"column":34}},"10":{"start":{"line":27,"column":8},"end":{"line":27,"column":36}},"11":{"start":{"line":28,"column":8},"end":{"line":28,"column":36}},"12":{"start":{"line":29,"column":8},"end":{"line":29,"column":38}},"13":{"start":{"line":32,"column":8},"end":{"line":64,"column":9}},"14":{"start":{"line":33,"column":12},"end":{"line":33,"column":34}},"15":{"start":{"line":35,"column":13},"end":{"line":64,"column":9}},"16":{"start":{"line":36,"column":12},"end":{"line":36,"column":32}},"17":{"start":{"line":38,"column":13},"end":{"line":64,"column":9}},"18":{"start":{"line":39,"column":12},"end":{"line":39,"column":35}},"19":{"start":{"line":41,"column":13},"end":{"line":64,"column":9}},"20":{"start":{"line":42,"column":12},"end":{"line":42,"column":40}},"21":{"start":{"line":44,"column":13},"end":{"line":64,"column":9}},"22":{"start":{"line":45,"column":12},"end":{"line":45,"column":40}},"23":{"start":{"line":47,"column":13},"end":{"line":64,"column":9}},"24":{"start":{"line":48,"column":12},"end":{"line":48,"column":34}},"25":{"start":{"line":50,"column":13},"end":{"line":64,"column":9}},"26":{"start":{"line":51,"column":12},"end":{"line":51,"column":33}},"27":{"start":{"line":53,"column":13},"end":{"line":64,"column":9}},"28":{"start":{"line":54,"column":12},"end":{"line":54,"column":34}},"29":{"start":{"line":56,"column":13},"end":{"line":64,"column":9}},"30":{"start":{"line":57,"column":12},"end":{"line":57,"column":34}},"31":{"start":{"line":59,"column":13},"end":{"line":64,"column":9}},"32":{"start":{"line":60,"column":12},"end":{"line":60,"column":35}},"33":{"start":{"line":63,"column":12},"end":{"line":63,"column":75}},"34":{"start":{"line":67,"column":8},"end":{"line":67,"column":25}},"35":{"start":{"line":70,"column":8},"end":{"line":70,"column":23}},"36":{"start":{"line":73,"column":8},"end":{"line":73,"column":26}},"37":{"start":{"line":76,"column":8},"end":{"line":76,"column":31}},"38":{"start":{"line":79,"column":8},"end":{"line":79,"column":25}},"39":{"start":{"line":82,"column":8},"end":{"line":82,"column":25}},"40":{"start":{"line":85,"column":8},"end":{"line":85,"column":24}},"41":{"start":{"line":88,"column":8},"end":{"line":88,"column":25}},"42":{"start":{"line":91,"column":8},"end":{"line":91,"column":25}},"43":{"start":{"line":94,"column":8},"end":{"line":94,"column":26}},"44":{"start":{"line":97,"column":0},"end":{"line":97,"column":26}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":14,"column":4},"end":{"line":14,"column":5}},"loc":{"start":{"line":14,"column":28},"end":{"line":30,"column":5}},"line":14},"1":{"name":"(anonymous_1)","decl":{"start":{"line":31,"column":4},"end":{"line":31,"column":5}},"loc":{"start":{"line":31,"column":32},"end":{"line":65,"column":5}},"line":31},"2":{"name":"(anonymous_2)","decl":{"start":{"line":66,"column":4},"end":{"line":66,"column":5}},"loc":{"start":{"line":66,"column":14},"end":{"line":68,"column":5}},"line":66},"3":{"name":"(anonymous_3)","decl":{"start":{"line":69,"column":4},"end":{"line":69,"column":5}},"loc":{"start":{"line":69,"column":12},"end":{"line":71,"column":5}},"line":69},"4":{"name":"(anonymous_4)","decl":{"start":{"line":72,"column":4},"end":{"line":72,"column":5}},"loc":{"start":{"line":72,"column":15},"end":{"line":74,"column":5}},"line":72},"5":{"name":"(anonymous_5)","decl":{"start":{"line":75,"column":4},"end":{"line":75,"column":5}},"loc":{"start":{"line":75,"column":20},"end":{"line":77,"column":5}},"line":75},"6":{"name":"(anonymous_6)","decl":{"start":{"line":78,"column":4},"end":{"line":78,"column":5}},"loc":{"start":{"line":78,"column":20},"end":{"line":80,"column":5}},"line":78},"7":{"name":"(anonymous_7)","decl":{"start":{"line":81,"column":4},"end":{"line":81,"column":5}},"loc":{"start":{"line":81,"column":14},"end":{"line":83,"column":5}},"line":81},"8":{"name":"(anonymous_8)","decl":{"start":{"line":84,"column":4},"end":{"line":84,"column":5}},"loc":{"start":{"line":84,"column":13},"end":{"line":86,"column":5}},"line":84},"9":{"name":"(anonymous_9)","decl":{"start":{"line":87,"column":4},"end":{"line":87,"column":5}},"loc":{"start":{"line":87,"column":14},"end":{"line":89,"column":5}},"line":87},"10":{"name":"(anonymous_10)","decl":{"start":{"line":90,"column":4},"end":{"line":90,"column":5}},"loc":{"start":{"line":90,"column":14},"end":{"line":92,"column":5}},"line":90},"11":{"name":"(anonymous_11)","decl":{"start":{"line":93,"column":4},"end":{"line":93,"column":5}},"loc":{"start":{"line":93,"column":15},"end":{"line":95,"column":5}},"line":93}},"branchMap":{"0":{"loc":{"start":{"line":20,"column":8},"end":{"line":25,"column":9}},"type":"if","locations":[{"start":{"line":20,"column":8},"end":{"line":25,"column":9}},{"start":{"line":20,"column":8},"end":{"line":25,"column":9}}],"line":20},"1":{"loc":{"start":{"line":32,"column":8},"end":{"line":64,"column":9}},"type":"if","locations":[{"start":{"line":32,"column":8},"end":{"line":64,"column":9}},{"start":{"line":32,"column":8},"end":{"line":64,"column":9}}],"line":32},"2":{"loc":{"start":{"line":35,"column":13},"end":{"line":64,"column":9}},"type":"if","locations":[{"start":{"line":35,"column":13},"end":{"line":64,"column":9}},{"start":{"line":35,"column":13},"end":{"line":64,"column":9}}],"line":35},"3":{"loc":{"start":{"line":38,"column":13},"end":{"line":64,"column":9}},"type":"if","locations":[{"start":{"line":38,"column":13},"end":{"line":64,"column":9}},{"start":{"line":38,"column":13},"end":{"line":64,"column":9}}],"line":38},"4":{"loc":{"start":{"line":41,"column":13},"end":{"line":64,"column":9}},"type":"if","locations":[{"start":{"line":41,"column":13},"end":{"line":64,"column":9}},{"start":{"line":41,"column":13},"end":{"line":64,"column":9}}],"line":41},"5":{"loc":{"start":{"line":44,"column":13},"end":{"line":64,"column":9}},"type":"if","locations":[{"start":{"line":44,"column":13},"end":{"line":64,"column":9}},{"start":{"line":44,"column":13},"end":{"line":64,"column":9}}],"line":44},"6":{"loc":{"start":{"line":47,"column":13},"end":{"line":64,"column":9}},"type":"if","locations":[{"start":{"line":47,"column":13},"end":{"line":64,"column":9}},{"start":{"line":47,"column":13},"end":{"line":64,"column":9}}],"line":47},"7":{"loc":{"start":{"line":50,"column":13},"end":{"line":64,"column":9}},"type":"if","locations":[{"start":{"line":50,"column":13},"end":{"line":64,"column":9}},{"start":{"line":50,"column":13},"end":{"line":64,"column":9}}],"line":50},"8":{"loc":{"start":{"line":53,"column":13},"end":{"line":64,"column":9}},"type":"if","locations":[{"start":{"line":53,"column":13},"end":{"line":64,"column":9}},{"start":{"line":53,"column":13},"end":{"line":64,"column":9}}],"line":53},"9":{"loc":{"start":{"line":56,"column":13},"end":{"line":64,"column":9}},"type":"if","locations":[{"start":{"line":56,"column":13},"end":{"line":64,"column":9}},{"start":{"line":56,"column":13},"end":{"line":64,"column":9}}],"line":56},"10":{"loc":{"start":{"line":59,"column":13},"end":{"line":64,"column":9}},"type":"if","locations":[{"start":{"line":59,"column":13},"end":{"line":64,"column":9}},{"start":{"line":59,"column":13},"end":{"line":64,"column":9}}],"line":59}},"s":{"0":1,"1":387721,"2":387721,"3":387721,"4":387721,"5":387721,"6":387721,"7":147750,"8":239971,"9":387721,"10":387721,"11":387721,"12":387721,"13":8232083,"14":964,"15":8231119,"16":136856,"17":8094263,"18":884,"19":8093379,"20":864,"21":8092515,"22":3718896,"23":4373619,"24":896,"25":4372723,"26":4369843,"27":2880,"28":864,"29":2016,"30":884,"31":1132,"32":1132,"33":0,"34":964,"35":136856,"36":884,"37":864,"38":3718896,"39":65508,"40":10637313,"41":864,"42":884,"43":278300,"44":1},"f":{"0":387721,"1":8232083,"2":964,"3":136856,"4":884,"5":864,"6":3718896,"7":65508,"8":10637313,"9":864,"10":884,"11":278300},"b":{"0":[147750,239971],"1":[964,8231119],"2":[136856,8094263],"3":[884,8093379],"4":[864,8092515],"5":[3718896,4373619],"6":[896,4372723],"7":[4369843,2880],"8":[864,2016],"9":[884,1132],"10":[1132,0]},"inputSourceMap":{"version":3,"file":"C:/Users/user/Documents/Fourth Year W2023T1/CPSC 310/project_team186/src/controller/Section.ts","sources":["C:/Users/user/Documents/Fourth Year W2023T1/CPSC 310/project_team186/src/controller/Section.ts"],"names":[],"mappings":";;AAaA,MAAqB,OAAO;IACV,IAAI,CAAS;IACb,EAAE,CAAS;IACX,KAAK,CAAS;IACd,UAAU,CAAS;IACnB,IAAI,CAAS;IACb,IAAI,CAAS;IACb,GAAG,CAAS;IACZ,IAAI,CAAS;IACb,IAAI,CAAS;IACb,KAAK,CAAS;IAG/B,YAAY,UAAuB;QAClC,IAAI,CAAC,IAAI,GAAG,UAAU,CAAC,EAAE,CAAC,QAAQ,EAAE,CAAC;QACrC,IAAI,CAAC,EAAE,GAAG,UAAU,CAAC,MAAM,CAAC;QAC5B,IAAI,CAAC,KAAK,GAAG,UAAU,CAAC,KAAK,CAAC;QAC9B,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC,SAAS,CAAC;QACvC,IAAI,CAAC,IAAI,GAAG,UAAU,CAAC,OAAO,CAAC;QAC/B,IAAI,UAAU,CAAC,OAAO,KAAK,SAAS,EAAE;YACrC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;SACjB;aAAM;YACN,IAAI,CAAC,IAAI,GAAG,UAAU,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;SACxC;QACD,IAAI,CAAC,GAAG,GAAG,UAAU,CAAC,GAAG,CAAC;QAC1B,IAAI,CAAC,IAAI,GAAG,UAAU,CAAC,IAAI,CAAC;QAC5B,IAAI,CAAC,IAAI,GAAG,UAAU,CAAC,IAAI,CAAC;QAC5B,IAAI,CAAC,KAAK,GAAG,UAAU,CAAC,KAAK,CAAC;IAC/B,CAAC;IAEM,cAAc,CAAC,WAAmB;QACxC,IAAI,WAAW,KAAK,MAAM,EAAE;YAC3B,OAAO,IAAI,CAAC,OAAO,EAAE,CAAC;SACtB;aAAM,IAAI,WAAW,KAAK,IAAI,EAAE;YAChC,OAAO,IAAI,CAAC,KAAK,EAAE,CAAC;SACpB;aAAM,IAAI,WAAW,KAAK,OAAO,EAAE;YACnC,OAAO,IAAI,CAAC,QAAQ,EAAE,CAAC;SACvB;aAAM,IAAI,WAAW,KAAK,YAAY,EAAE;YACxC,OAAO,IAAI,CAAC,aAAa,EAAE,CAAC;SAC5B;aAAM,IAAI,WAAW,KAAK,MAAM,EAAE;YAClC,OAAO,IAAI,CAAC,aAAa,EAAE,CAAC;SAC5B;aAAM,IAAI,WAAW,KAAK,MAAM,EAAE;YAClC,OAAO,IAAI,CAAC,OAAO,EAAE,CAAC;SACtB;aAAM,IAAI,WAAW,KAAK,KAAK,EAAE;YACjC,OAAO,IAAI,CAAC,MAAM,EAAE,CAAC;SACrB;aAAM,IAAI,WAAW,KAAK,MAAM,EAAE;YAClC,OAAO,IAAI,CAAC,OAAO,EAAE,CAAC;SACtB;aAAM,IAAI,WAAW,KAAK,MAAM,EAAE;YAClC,OAAO,IAAI,CAAC,OAAO,EAAE,CAAC;SACtB;aAAM,IAAI,WAAW,KAAK,OAAO,EAAE;YACnC,OAAO,IAAI,CAAC,QAAQ,EAAE,CAAC;SACvB;aAAM;YACN,MAAM,IAAI,KAAK,CAAC,mBAAmB,WAAW,eAAe,CAAC,CAAC;SAC/D;IACF,CAAC;IAEM,OAAO;QACb,OAAO,IAAI,CAAC,IAAI,CAAC;IAClB,CAAC;IACM,KAAK;QACX,OAAO,IAAI,CAAC,EAAE,CAAC;IAChB,CAAC;IAEM,QAAQ;QACd,OAAO,IAAI,CAAC,KAAK,CAAC;IACnB,CAAC;IAEM,aAAa;QACnB,OAAO,IAAI,CAAC,UAAU,CAAC;IACxB,CAAC;IACM,aAAa;QACnB,OAAO,IAAI,CAAC,IAAI,CAAC;IAClB,CAAC;IAEM,OAAO;QACb,OAAO,IAAI,CAAC,IAAI,CAAC;IAClB,CAAC;IAEM,MAAM;QACZ,OAAO,IAAI,CAAC,GAAG,CAAC;IACjB,CAAC;IAEM,OAAO;QACb,OAAO,IAAI,CAAC,IAAI,CAAC;IAClB,CAAC;IAEM,OAAO;QACb,OAAO,IAAI,CAAC,IAAI,CAAC;IAClB,CAAC;IAEM,QAAQ;QACd,OAAO,IAAI,CAAC,KAAK,CAAC;IACnB,CAAC;CACD;AA7FD,0BA6FC","sourcesContent":["export interface JsonSection {\r\n\tid: number;\r\n\tSection: string;\r\n\tSubject: string;\r\n\tCourse: string;\r\n\tTitle: string;\r\n\tProfessor: string;\r\n\tYear: string;\r\n\tAvg: number;\r\n\tPass: number;\r\n\tFail: number;\r\n\tAudit: number;\r\n}\r\nexport default class Section {\r\n\tprivate readonly uuid: string;\r\n\tprivate readonly id: string;\r\n\tprivate readonly title: string;\r\n\tprivate readonly instructor: string;\r\n\tprivate readonly dept: string;\r\n\tprivate readonly year: number;\r\n\tprivate readonly avg: number;\r\n\tprivate readonly pass: number;\r\n\tprivate readonly fail: number;\r\n\tprivate readonly audit: number;\r\n\r\n\t// jsonObject: result[i]\r\n\tconstructor(jsonObject: JsonSection) {\r\n\t\tthis.uuid = jsonObject.id.toString();\r\n\t\tthis.id = jsonObject.Course;\r\n\t\tthis.title = jsonObject.Title;\r\n\t\tthis.instructor = jsonObject.Professor;\r\n\t\tthis.dept = jsonObject.Subject;\r\n\t\tif (jsonObject.Section === \"overall\") {\r\n\t\t\tthis.year = 1900;\r\n\t\t} else {\r\n\t\t\tthis.year = parseFloat(jsonObject.Year);\r\n\t\t}\r\n\t\tthis.avg = jsonObject.Avg;\r\n\t\tthis.pass = jsonObject.Pass;\r\n\t\tthis.fail = jsonObject.Fail;\r\n\t\tthis.audit = jsonObject.Audit;\r\n\t}\r\n\r\n\tpublic getColumnField(targetField: string): string | number {\r\n\t\tif (targetField === \"uuid\") {\r\n\t\t\treturn this.getUuid();\r\n\t\t} else if (targetField === \"id\") {\r\n\t\t\treturn this.getId();\r\n\t\t} else if (targetField === \"title\") {\r\n\t\t\treturn this.getTitle();\r\n\t\t} else if (targetField === \"instructor\") {\r\n\t\t\treturn this.getInstructor();\r\n\t\t} else if (targetField === \"dept\") {\r\n\t\t\treturn this.getDepartment();\r\n\t\t} else if (targetField === \"year\") {\r\n\t\t\treturn this.getYear();\r\n\t\t} else if (targetField === \"avg\") {\r\n\t\t\treturn this.getAvg();\r\n\t\t} else if (targetField === \"pass\") {\r\n\t\t\treturn this.getPass();\r\n\t\t} else if (targetField === \"fail\") {\r\n\t\t\treturn this.getFail();\r\n\t\t} else if (targetField === \"audit\") {\r\n\t\t\treturn this.getAudit();\r\n\t\t} else {\r\n\t\t\tthrow new Error(`Invalid column: ${targetField} to get field`);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic getUuid(): string {\r\n\t\treturn this.uuid;\r\n\t}\r\n\tpublic getId(): string {\r\n\t\treturn this.id;\r\n\t}\r\n\r\n\tpublic getTitle(): string {\r\n\t\treturn this.title;\r\n\t}\r\n\r\n\tpublic getInstructor(): string {\r\n\t\treturn this.instructor;\r\n\t}\r\n\tpublic getDepartment(): string {\r\n\t\treturn this.dept;\r\n\t}\r\n\r\n\tpublic getYear(): number {\r\n\t\treturn this.year;\r\n\t}\r\n\r\n\tpublic getAvg(): number {\r\n\t\treturn this.avg;\r\n\t}\r\n\r\n\tpublic getPass(): number {\r\n\t\treturn this.pass;\r\n\t}\r\n\r\n\tpublic getFail(): number {\r\n\t\treturn this.fail;\r\n\t}\r\n\r\n\tpublic getAudit(): number {\r\n\t\treturn this.audit;\r\n\t}\r\n}\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"b061c592220aaa16fba8adc5a47cd197ef20e4fe","contentHash":"72d9d7e3b3f0bf85dd399054008466feb6cd3887da7e3f9695849edba6843227"},"C:\\Users\\user\\Documents\\Fourth Year W2023T1\\CPSC 310\\project_team186\\src\\controller\\Dataset.ts":{"path":"C:\\Users\\user\\Documents\\Fourth Year W2023T1\\CPSC 310\\project_team186\\src\\controller\\Dataset.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":25},"end":{"line":3,"column":52}},"2":{"start":{"line":8,"column":8},"end":{"line":15,"column":9}},"3":{"start":{"line":9,"column":12},"end":{"line":9,"column":25}},"4":{"start":{"line":10,"column":12},"end":{"line":10,"column":31}},"5":{"start":{"line":13,"column":12},"end":{"line":13,"column":25}},"6":{"start":{"line":14,"column":12},"end":{"line":14,"column":31}},"7":{"start":{"line":18,"column":8},"end":{"line":18,"column":21}},"8":{"start":{"line":21,"column":8},"end":{"line":21,"column":55}},"9":{"start":{"line":24,"column":8},"end":{"line":24,"column":36}},"10":{"start":{"line":27,"column":8},"end":{"line":27,"column":29}},"11":{"start":{"line":30,"column":8},"end":{"line":52,"column":9}},"12":{"start":{"line":31,"column":12},"end":{"line":31,"column":84}},"13":{"start":{"line":34,"column":12},"end":{"line":51,"column":13}},"14":{"start":{"line":35,"column":16},"end":{"line":35,"column":83}},"15":{"start":{"line":37,"column":17},"end":{"line":51,"column":13}},"16":{"start":{"line":38,"column":16},"end":{"line":38,"column":82}},"17":{"start":{"line":40,"column":17},"end":{"line":51,"column":13}},"18":{"start":{"line":41,"column":16},"end":{"line":41,"column":83}},"19":{"start":{"line":43,"column":17},"end":{"line":51,"column":13}},"20":{"start":{"line":44,"column":16},"end":{"line":44,"column":83}},"21":{"start":{"line":46,"column":17},"end":{"line":51,"column":13}},"22":{"start":{"line":47,"column":16},"end":{"line":47,"column":84}},"23":{"start":{"line":50,"column":16},"end":{"line":50,"column":127}},"24":{"start":{"line":55,"column":8},"end":{"line":69,"column":9}},"25":{"start":{"line":56,"column":34},"end":{"line":56,"column":58}},"26":{"start":{"line":57,"column":12},"end":{"line":57,"column":109}},"27":{"start":{"line":57,"column":48},"end":{"line":57,"column":107}},"28":{"start":{"line":59,"column":13},"end":{"line":69,"column":9}},"29":{"start":{"line":60,"column":34},"end":{"line":60,"column":54}},"30":{"start":{"line":61,"column":12},"end":{"line":61,"column":109}},"31":{"start":{"line":61,"column":48},"end":{"line":61,"column":107}},"32":{"start":{"line":63,"column":13},"end":{"line":69,"column":9}},"33":{"start":{"line":64,"column":34},"end":{"line":64,"column":58}},"34":{"start":{"line":65,"column":12},"end":{"line":65,"column":111}},"35":{"start":{"line":65,"column":48},"end":{"line":65,"column":109}},"36":{"start":{"line":68,"column":12},"end":{"line":68,"column":101}},"37":{"start":{"line":68,"column":48},"end":{"line":68,"column":99}},"38":{"start":{"line":72,"column":8},"end":{"line":83,"column":9}},"39":{"start":{"line":73,"column":12},"end":{"line":73,"column":83}},"40":{"start":{"line":73,"column":48},"end":{"line":73,"column":81}},"41":{"start":{"line":75,"column":13},"end":{"line":83,"column":9}},"42":{"start":{"line":76,"column":12},"end":{"line":76,"column":81}},"43":{"start":{"line":76,"column":48},"end":{"line":76,"column":79}},"44":{"start":{"line":78,"column":13},"end":{"line":83,"column":9}},"45":{"start":{"line":79,"column":12},"end":{"line":79,"column":81}},"46":{"start":{"line":79,"column":48},"end":{"line":79,"column":79}},"47":{"start":{"line":82,"column":12},"end":{"line":82,"column":90}},"48":{"start":{"line":86,"column":8},"end":{"line":97,"column":9}},"49":{"start":{"line":87,"column":12},"end":{"line":87,"column":81}},"50":{"start":{"line":87,"column":48},"end":{"line":87,"column":79}},"51":{"start":{"line":89,"column":13},"end":{"line":97,"column":9}},"52":{"start":{"line":90,"column":12},"end":{"line":90,"column":79}},"53":{"start":{"line":90,"column":48},"end":{"line":90,"column":77}},"54":{"start":{"line":92,"column":13},"end":{"line":97,"column":9}},"55":{"start":{"line":93,"column":12},"end":{"line":93,"column":79}},"56":{"start":{"line":93,"column":48},"end":{"line":93,"column":77}},"57":{"start":{"line":96,"column":12},"end":{"line":96,"column":90}},"58":{"start":{"line":100,"column":8},"end":{"line":111,"column":9}},"59":{"start":{"line":101,"column":12},"end":{"line":101,"column":83}},"60":{"start":{"line":101,"column":48},"end":{"line":101,"column":81}},"61":{"start":{"line":103,"column":13},"end":{"line":111,"column":9}},"62":{"start":{"line":104,"column":12},"end":{"line":104,"column":81}},"63":{"start":{"line":104,"column":48},"end":{"line":104,"column":79}},"64":{"start":{"line":106,"column":13},"end":{"line":111,"column":9}},"65":{"start":{"line":107,"column":12},"end":{"line":107,"column":81}},"66":{"start":{"line":107,"column":48},"end":{"line":107,"column":79}},"67":{"start":{"line":110,"column":12},"end":{"line":110,"column":90}},"68":{"start":{"line":114,"column":8},"end":{"line":125,"column":9}},"69":{"start":{"line":115,"column":12},"end":{"line":115,"column":83}},"70":{"start":{"line":115,"column":48},"end":{"line":115,"column":81}},"71":{"start":{"line":117,"column":13},"end":{"line":125,"column":9}},"72":{"start":{"line":118,"column":12},"end":{"line":118,"column":81}},"73":{"start":{"line":118,"column":48},"end":{"line":118,"column":79}},"74":{"start":{"line":120,"column":13},"end":{"line":125,"column":9}},"75":{"start":{"line":121,"column":12},"end":{"line":121,"column":81}},"76":{"start":{"line":121,"column":48},"end":{"line":121,"column":79}},"77":{"start":{"line":124,"column":12},"end":{"line":124,"column":90}},"78":{"start":{"line":128,"column":8},"end":{"line":139,"column":9}},"79":{"start":{"line":129,"column":12},"end":{"line":129,"column":85}},"80":{"start":{"line":129,"column":48},"end":{"line":129,"column":83}},"81":{"start":{"line":131,"column":13},"end":{"line":139,"column":9}},"82":{"start":{"line":132,"column":12},"end":{"line":132,"column":83}},"83":{"start":{"line":132,"column":48},"end":{"line":132,"column":81}},"84":{"start":{"line":134,"column":13},"end":{"line":139,"column":9}},"85":{"start":{"line":135,"column":12},"end":{"line":135,"column":83}},"86":{"start":{"line":135,"column":48},"end":{"line":135,"column":81}},"87":{"start":{"line":138,"column":12},"end":{"line":138,"column":90}},"88":{"start":{"line":142,"column":0},"end":{"line":142,"column":26}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":7,"column":4},"end":{"line":7,"column":5}},"loc":{"start":{"line":7,"column":20},"end":{"line":16,"column":5}},"line":7},"1":{"name":"(anonymous_1)","decl":{"start":{"line":17,"column":4},"end":{"line":17,"column":5}},"loc":{"start":{"line":17,"column":21},"end":{"line":19,"column":5}},"line":17},"2":{"name":"(anonymous_2)","decl":{"start":{"line":20,"column":4},"end":{"line":20,"column":5}},"loc":{"start":{"line":20,"column":33},"end":{"line":22,"column":5}},"line":20},"3":{"name":"(anonymous_3)","decl":{"start":{"line":23,"column":4},"end":{"line":23,"column":5}},"loc":{"start":{"line":23,"column":23},"end":{"line":25,"column":5}},"line":23},"4":{"name":"(anonymous_4)","decl":{"start":{"line":26,"column":4},"end":{"line":26,"column":5}},"loc":{"start":{"line":26,"column":21},"end":{"line":28,"column":5}},"line":26},"5":{"name":"(anonymous_5)","decl":{"start":{"line":29,"column":4},"end":{"line":29,"column":5}},"loc":{"start":{"line":29,"column":77},"end":{"line":53,"column":5}},"line":29},"6":{"name":"(anonymous_6)","decl":{"start":{"line":54,"column":4},"end":{"line":54,"column":5}},"loc":{"start":{"line":54,"column":64},"end":{"line":70,"column":5}},"line":54},"7":{"name":"(anonymous_7)","decl":{"start":{"line":57,"column":35},"end":{"line":57,"column":36}},"loc":{"start":{"line":57,"column":48},"end":{"line":57,"column":107}},"line":57},"8":{"name":"(anonymous_8)","decl":{"start":{"line":61,"column":35},"end":{"line":61,"column":36}},"loc":{"start":{"line":61,"column":48},"end":{"line":61,"column":107}},"line":61},"9":{"name":"(anonymous_9)","decl":{"start":{"line":65,"column":35},"end":{"line":65,"column":36}},"loc":{"start":{"line":65,"column":48},"end":{"line":65,"column":109}},"line":65},"10":{"name":"(anonymous_10)","decl":{"start":{"line":68,"column":35},"end":{"line":68,"column":36}},"loc":{"start":{"line":68,"column":48},"end":{"line":68,"column":99}},"line":68},"11":{"name":"(anonymous_11)","decl":{"start":{"line":71,"column":4},"end":{"line":71,"column":5}},"loc":{"start":{"line":71,"column":59},"end":{"line":84,"column":5}},"line":71},"12":{"name":"(anonymous_12)","decl":{"start":{"line":73,"column":35},"end":{"line":73,"column":36}},"loc":{"start":{"line":73,"column":48},"end":{"line":73,"column":81}},"line":73},"13":{"name":"(anonymous_13)","decl":{"start":{"line":76,"column":35},"end":{"line":76,"column":36}},"loc":{"start":{"line":76,"column":48},"end":{"line":76,"column":79}},"line":76},"14":{"name":"(anonymous_14)","decl":{"start":{"line":79,"column":35},"end":{"line":79,"column":36}},"loc":{"start":{"line":79,"column":48},"end":{"line":79,"column":79}},"line":79},"15":{"name":"(anonymous_15)","decl":{"start":{"line":85,"column":4},"end":{"line":85,"column":5}},"loc":{"start":{"line":85,"column":57},"end":{"line":98,"column":5}},"line":85},"16":{"name":"(anonymous_16)","decl":{"start":{"line":87,"column":35},"end":{"line":87,"column":36}},"loc":{"start":{"line":87,"column":48},"end":{"line":87,"column":79}},"line":87},"17":{"name":"(anonymous_17)","decl":{"start":{"line":90,"column":35},"end":{"line":90,"column":36}},"loc":{"start":{"line":90,"column":48},"end":{"line":90,"column":77}},"line":90},"18":{"name":"(anonymous_18)","decl":{"start":{"line":93,"column":35},"end":{"line":93,"column":36}},"loc":{"start":{"line":93,"column":48},"end":{"line":93,"column":77}},"line":93},"19":{"name":"(anonymous_19)","decl":{"start":{"line":99,"column":4},"end":{"line":99,"column":5}},"loc":{"start":{"line":99,"column":59},"end":{"line":112,"column":5}},"line":99},"20":{"name":"(anonymous_20)","decl":{"start":{"line":101,"column":35},"end":{"line":101,"column":36}},"loc":{"start":{"line":101,"column":48},"end":{"line":101,"column":81}},"line":101},"21":{"name":"(anonymous_21)","decl":{"start":{"line":104,"column":35},"end":{"line":104,"column":36}},"loc":{"start":{"line":104,"column":48},"end":{"line":104,"column":79}},"line":104},"22":{"name":"(anonymous_22)","decl":{"start":{"line":107,"column":35},"end":{"line":107,"column":36}},"loc":{"start":{"line":107,"column":48},"end":{"line":107,"column":79}},"line":107},"23":{"name":"(anonymous_23)","decl":{"start":{"line":113,"column":4},"end":{"line":113,"column":5}},"loc":{"start":{"line":113,"column":59},"end":{"line":126,"column":5}},"line":113},"24":{"name":"(anonymous_24)","decl":{"start":{"line":115,"column":35},"end":{"line":115,"column":36}},"loc":{"start":{"line":115,"column":48},"end":{"line":115,"column":81}},"line":115},"25":{"name":"(anonymous_25)","decl":{"start":{"line":118,"column":35},"end":{"line":118,"column":36}},"loc":{"start":{"line":118,"column":48},"end":{"line":118,"column":79}},"line":118},"26":{"name":"(anonymous_26)","decl":{"start":{"line":121,"column":35},"end":{"line":121,"column":36}},"loc":{"start":{"line":121,"column":48},"end":{"line":121,"column":79}},"line":121},"27":{"name":"(anonymous_27)","decl":{"start":{"line":127,"column":4},"end":{"line":127,"column":5}},"loc":{"start":{"line":127,"column":61},"end":{"line":140,"column":5}},"line":127},"28":{"name":"(anonymous_28)","decl":{"start":{"line":129,"column":35},"end":{"line":129,"column":36}},"loc":{"start":{"line":129,"column":48},"end":{"line":129,"column":83}},"line":129},"29":{"name":"(anonymous_29)","decl":{"start":{"line":132,"column":35},"end":{"line":132,"column":36}},"loc":{"start":{"line":132,"column":48},"end":{"line":132,"column":81}},"line":132},"30":{"name":"(anonymous_30)","decl":{"start":{"line":135,"column":35},"end":{"line":135,"column":36}},"loc":{"start":{"line":135,"column":48},"end":{"line":135,"column":81}},"line":135}},"branchMap":{"0":{"loc":{"start":{"line":8,"column":8},"end":{"line":15,"column":9}},"type":"if","locations":[{"start":{"line":8,"column":8},"end":{"line":15,"column":9}},{"start":{"line":8,"column":8},"end":{"line":15,"column":9}}],"line":8},"1":{"loc":{"start":{"line":30,"column":8},"end":{"line":52,"column":9}},"type":"if","locations":[{"start":{"line":30,"column":8},"end":{"line":52,"column":9}},{"start":{"line":30,"column":8},"end":{"line":52,"column":9}}],"line":30},"2":{"loc":{"start":{"line":34,"column":12},"end":{"line":51,"column":13}},"type":"if","locations":[{"start":{"line":34,"column":12},"end":{"line":51,"column":13}},{"start":{"line":34,"column":12},"end":{"line":51,"column":13}}],"line":34},"3":{"loc":{"start":{"line":37,"column":17},"end":{"line":51,"column":13}},"type":"if","locations":[{"start":{"line":37,"column":17},"end":{"line":51,"column":13}},{"start":{"line":37,"column":17},"end":{"line":51,"column":13}}],"line":37},"4":{"loc":{"start":{"line":40,"column":17},"end":{"line":51,"column":13}},"type":"if","locations":[{"start":{"line":40,"column":17},"end":{"line":51,"column":13}},{"start":{"line":40,"column":17},"end":{"line":51,"column":13}}],"line":40},"5":{"loc":{"start":{"line":43,"column":17},"end":{"line":51,"column":13}},"type":"if","locations":[{"start":{"line":43,"column":17},"end":{"line":51,"column":13}},{"start":{"line":43,"column":17},"end":{"line":51,"column":13}}],"line":43},"6":{"loc":{"start":{"line":46,"column":17},"end":{"line":51,"column":13}},"type":"if","locations":[{"start":{"line":46,"column":17},"end":{"line":51,"column":13}},{"start":{"line":46,"column":17},"end":{"line":51,"column":13}}],"line":46},"7":{"loc":{"start":{"line":55,"column":8},"end":{"line":69,"column":9}},"type":"if","locations":[{"start":{"line":55,"column":8},"end":{"line":69,"column":9}},{"start":{"line":55,"column":8},"end":{"line":69,"column":9}}],"line":55},"8":{"loc":{"start":{"line":55,"column":12},"end":{"line":55,"column":68}},"type":"binary-expr","locations":[{"start":{"line":55,"column":12},"end":{"line":55,"column":39}},{"start":{"line":55,"column":43},"end":{"line":55,"column":68}}],"line":55},"9":{"loc":{"start":{"line":59,"column":13},"end":{"line":69,"column":9}},"type":"if","locations":[{"start":{"line":59,"column":13},"end":{"line":69,"column":9}},{"start":{"line":59,"column":13},"end":{"line":69,"column":9}}],"line":59},"10":{"loc":{"start":{"line":63,"column":13},"end":{"line":69,"column":9}},"type":"if","locations":[{"start":{"line":63,"column":13},"end":{"line":69,"column":9}},{"start":{"line":63,"column":13},"end":{"line":69,"column":9}}],"line":63},"11":{"loc":{"start":{"line":72,"column":8},"end":{"line":83,"column":9}},"type":"if","locations":[{"start":{"line":72,"column":8},"end":{"line":83,"column":9}},{"start":{"line":72,"column":8},"end":{"line":83,"column":9}}],"line":72},"12":{"loc":{"start":{"line":75,"column":13},"end":{"line":83,"column":9}},"type":"if","locations":[{"start":{"line":75,"column":13},"end":{"line":83,"column":9}},{"start":{"line":75,"column":13},"end":{"line":83,"column":9}}],"line":75},"13":{"loc":{"start":{"line":78,"column":13},"end":{"line":83,"column":9}},"type":"if","locations":[{"start":{"line":78,"column":13},"end":{"line":83,"column":9}},{"start":{"line":78,"column":13},"end":{"line":83,"column":9}}],"line":78},"14":{"loc":{"start":{"line":86,"column":8},"end":{"line":97,"column":9}},"type":"if","locations":[{"start":{"line":86,"column":8},"end":{"line":97,"column":9}},{"start":{"line":86,"column":8},"end":{"line":97,"column":9}}],"line":86},"15":{"loc":{"start":{"line":89,"column":13},"end":{"line":97,"column":9}},"type":"if","locations":[{"start":{"line":89,"column":13},"end":{"line":97,"column":9}},{"start":{"line":89,"column":13},"end":{"line":97,"column":9}}],"line":89},"16":{"loc":{"start":{"line":92,"column":13},"end":{"line":97,"column":9}},"type":"if","locations":[{"start":{"line":92,"column":13},"end":{"line":97,"column":9}},{"start":{"line":92,"column":13},"end":{"line":97,"column":9}}],"line":92},"17":{"loc":{"start":{"line":100,"column":8},"end":{"line":111,"column":9}},"type":"if","locations":[{"start":{"line":100,"column":8},"end":{"line":111,"column":9}},{"start":{"line":100,"column":8},"end":{"line":111,"column":9}}],"line":100},"18":{"loc":{"start":{"line":103,"column":13},"end":{"line":111,"column":9}},"type":"if","locations":[{"start":{"line":103,"column":13},"end":{"line":111,"column":9}},{"start":{"line":103,"column":13},"end":{"line":111,"column":9}}],"line":103},"19":{"loc":{"start":{"line":106,"column":13},"end":{"line":111,"column":9}},"type":"if","locations":[{"start":{"line":106,"column":13},"end":{"line":111,"column":9}},{"start":{"line":106,"column":13},"end":{"line":111,"column":9}}],"line":106},"20":{"loc":{"start":{"line":114,"column":8},"end":{"line":125,"column":9}},"type":"if","locations":[{"start":{"line":114,"column":8},"end":{"line":125,"column":9}},{"start":{"line":114,"column":8},"end":{"line":125,"column":9}}],"line":114},"21":{"loc":{"start":{"line":117,"column":13},"end":{"line":125,"column":9}},"type":"if","locations":[{"start":{"line":117,"column":13},"end":{"line":125,"column":9}},{"start":{"line":117,"column":13},"end":{"line":125,"column":9}}],"line":117},"22":{"loc":{"start":{"line":120,"column":13},"end":{"line":125,"column":9}},"type":"if","locations":[{"start":{"line":120,"column":13},"end":{"line":125,"column":9}},{"start":{"line":120,"column":13},"end":{"line":125,"column":9}}],"line":120},"23":{"loc":{"start":{"line":128,"column":8},"end":{"line":139,"column":9}},"type":"if","locations":[{"start":{"line":128,"column":8},"end":{"line":139,"column":9}},{"start":{"line":128,"column":8},"end":{"line":139,"column":9}}],"line":128},"24":{"loc":{"start":{"line":131,"column":13},"end":{"line":139,"column":9}},"type":"if","locations":[{"start":{"line":131,"column":13},"end":{"line":139,"column":9}},{"start":{"line":131,"column":13},"end":{"line":139,"column":9}}],"line":131},"25":{"loc":{"start":{"line":134,"column":13},"end":{"line":139,"column":9}},"type":"if","locations":[{"start":{"line":134,"column":13},"end":{"line":139,"column":9}},{"start":{"line":134,"column":13},"end":{"line":139,"column":9}}],"line":134}},"s":{"0":1,"1":1,"2":124,"3":25,"4":25,"5":99,"6":99,"7":99,"8":21649,"9":22,"10":121,"11":193,"12":83,"13":110,"14":1,"15":109,"16":103,"17":6,"18":0,"19":6,"20":0,"21":6,"22":6,"23":0,"24":83,"25":53,"26":53,"27":3037913,"28":30,"29":4,"30":4,"31":130074,"32":26,"33":12,"34":12,"35":524000,"36":14,"37":148074,"38":1,"39":0,"40":0,"41":1,"42":1,"43":64612,"44":0,"45":0,"46":0,"47":0,"48":103,"49":14,"50":904568,"51":89,"52":57,"53":3553738,"54":32,"55":32,"56":1809164,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":6,"79":4,"80":258448,"81":2,"82":2,"83":18720,"84":0,"85":0,"86":0,"87":0,"88":1},"f":{"0":124,"1":99,"2":21649,"3":22,"4":121,"5":193,"6":83,"7":3037913,"8":130074,"9":524000,"10":148074,"11":1,"12":0,"13":64612,"14":0,"15":103,"16":904568,"17":3553738,"18":1809164,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":6,"28":258448,"29":18720,"30":0},"b":{"0":[25,99],"1":[83,110],"2":[1,109],"3":[103,6],"4":[0,6],"5":[0,6],"6":[6,0],"7":[53,30],"8":[83,57],"9":[4,26],"10":[12,14],"11":[0,1],"12":[1,0],"13":[0,0],"14":[14,89],"15":[57,32],"16":[32,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[4,2],"24":[2,0],"25":[0,0]},"inputSourceMap":{"version":3,"file":"C:/Users/user/Documents/Fourth Year W2023T1/CPSC 310/project_team186/src/controller/Dataset.ts","sources":["C:/Users/user/Documents/Fourth Year W2023T1/CPSC 310/project_team186/src/controller/Dataset.ts"],"names":[],"mappings":"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","sourcesContent":["import Section from \"./Section\";\r\nimport {InsightError} from \"./IInsightFacade\";\r\nimport * as regexpp from \"regexpp\";\r\nimport InsightFacade from \"./InsightFacade\";\r\n\r\nexport default class Dataset {\r\n\tprivate id: string;\r\n\tprivate sections: Section[];\r\n\r\n\tconstructor(id?: string) {\r\n\t\tif (id) {\r\n\t\t\tthis.id = id;\r\n\t\t\tthis.sections = [];\r\n\t\t} else {\r\n\t\t\tthis.id = \"\";\r\n\t\t\tthis.sections = [];\r\n\t\t}\r\n\t}\r\n\r\n\tpublic setDatasetID(id: string): void {\r\n\t\tthis.id = id;\r\n\t}\r\n\r\n\tpublic addDatasetSections(sections: Section[]): void {\r\n\t\tthis.sections = this.sections.concat(sections);\r\n\t}\r\n\r\n\tpublic getDatasetLength(): number {\r\n\t\treturn this.sections.length;\r\n\t}\r\n\r\n\tpublic getAllSections(): Section[] {\r\n\t\treturn this.sections;\r\n\t}\r\n\r\n\tpublic getSectionsWithCondition(sections: Section[],\r\n\t\tcomparator: string, targetField: string, targetValue: string | number): Section[] {\r\n\t\tif (typeof targetValue === \"string\") {\r\n\t\t\treturn this.getSectionsWithWildcard(sections, targetField, targetValue as string);\r\n\t\t} else {\r\n\t\t\tif (targetField === \"year\") {\r\n\t\t\t\treturn this.getSectionsWithYear(sections, targetValue as number, comparator);\r\n\t\t\t} else if (targetField === \"avg\") {\r\n\t\t\t\treturn this.getSectionsWithAvg(sections, targetValue as number, comparator);\r\n\t\t\t} else if (targetField === \"pass\") {\r\n\t\t\t\treturn this.getSectionsWithPass(sections, targetValue as number, comparator);\r\n\t\t\t} else if (targetField === \"fail\") {\r\n\t\t\t\treturn this.getSectionsWithFail(sections, targetValue as number, comparator);\r\n\t\t\t} else if (targetField === \"audit\") {\r\n\t\t\t\treturn this.getSectionsWithAudit(sections, targetValue as number, comparator);\r\n\t\t\t} else {\r\n\t\t\t\tthrow new InsightError(`ERROR in getSectionsWithCondition(); ${targetField}, ${targetValue}`);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate getSectionsWithWildcard(sections: Section[], targetField: string, targetValue: string): Section[] {\r\n\t\tif (targetValue.startsWith(\"*\") && targetValue.endsWith(\"*\")) {\r\n\t\t\tconst wildcardValue = targetValue.slice(1, -1); // remove start and end asterisks (ChatGPT)\r\n\t\t\treturn sections.filter((section) =>\r\n\t\t\t\t(section.getColumnField(targetField) as string).includes(wildcardValue));\r\n\t\t} else if (targetValue.startsWith(\"*\")) {\r\n\t\t\tconst wildcardValue = targetValue.slice(1); \t\t// remove start asterisk\r\n\t\t\treturn sections.filter((section) =>\r\n\t\t\t\t(section.getColumnField(targetField) as string).endsWith(wildcardValue));\r\n\t\t} else if (targetValue.endsWith(\"*\")) {\r\n\t\t\tconst wildcardValue = targetValue.slice(0, -1); // remove end asterisk\r\n\t\t\treturn sections.filter((section) =>\r\n\t\t\t\t(section.getColumnField(targetField) as string).startsWith(wildcardValue));\r\n\t\t} else {\t\t\t\t\t\t\t\t\t\t\t\t\t// no wildcard\r\n\t\t\treturn sections.filter((section) => section.getColumnField(targetField) === targetValue);\r\n\t\t}\r\n\t}\r\n\r\n\t// get all sections with year number\r\n\tpublic getSectionsWithYear(sections: Section[], year_number: number, comparator: string): Section[] {\r\n\t\tif (comparator === \"EQ\") {\r\n\t\t\treturn sections.filter((section) => section.getYear() === year_number);\r\n\t\t} else if (comparator === \"GT\") {\r\n\t\t\treturn sections.filter((section) => section.getYear() > year_number);\r\n\t\t} else if (comparator === \"LT\") {\r\n\t\t\treturn sections.filter((section) => section.getYear() < year_number);\r\n\t\t} else {\r\n\t\t\tthrow new InsightError(\"INVALID COMPARATOR IN SECTIONS GET\");\r\n\t\t}\r\n\t}\r\n\r\n\t// get all sections with average number\r\n\tpublic getSectionsWithAvg(sections: Section[], avg_number: number, comparator: string): Section[] {\r\n\t\tif (comparator === \"EQ\") {\r\n\t\t\treturn sections.filter((section) => section.getAvg() === avg_number);\r\n\t\t} else if (comparator === \"GT\") {\r\n\t\t\treturn sections.filter((section) => section.getAvg() > avg_number);\r\n\t\t} else if (comparator === \"LT\") {\r\n\t\t\treturn sections.filter((section) => section.getAvg() < avg_number);\r\n\t\t} else {\r\n\t\t\tthrow new InsightError(\"INVALID COMPARATOR IN SECTIONS GET\");\r\n\t\t}\r\n\t}\r\n\r\n\t// get all sections with pass number\r\n\tpublic getSectionsWithPass(sections: Section[], pass_number: number, comparator: string): Section[] {\r\n\t\tif (comparator === \"EQ\") {\r\n\t\t\treturn sections.filter((section) => section.getPass() === pass_number);\r\n\t\t} else if (comparator === \"GT\") {\r\n\t\t\treturn sections.filter((section) => section.getPass() > pass_number);\r\n\t\t} else if (comparator === \"LT\") {\r\n\t\t\treturn sections.filter((section) => section.getPass() < pass_number);\r\n\t\t} else {\r\n\t\t\tthrow new InsightError(\"INVALID COMPARATOR IN SECTIONS GET\");\r\n\t\t}\r\n\t}\r\n\r\n\t// get all sections with fail number\r\n\tpublic getSectionsWithFail(sections: Section[], fail_number: number, comparator: string): Section[] {\r\n\t\tif (comparator === \"EQ\") {\r\n\t\t\treturn sections.filter((section) => section.getFail() === fail_number);\r\n\t\t} else if (comparator === \"GT\") {\r\n\t\t\treturn sections.filter((section) => section.getFail() > fail_number);\r\n\t\t} else if (comparator === \"LT\") {\r\n\t\t\treturn sections.filter((section) => section.getFail() < fail_number);\r\n\t\t} else {\r\n\t\t\tthrow new InsightError(\"INVALID COMPARATOR IN SECTIONS GET\");\r\n\t\t}\r\n\t}\r\n\r\n\t// get all sections with audit number\r\n\tpublic getSectionsWithAudit(sections: Section[], audit_number: number, comparator: string): Section[] {\r\n\t\tif (comparator === \"EQ\") {\r\n\t\t\treturn sections.filter((section) => section.getAudit() === audit_number);\r\n\t\t} else if (comparator === \"GT\") {\r\n\t\t\treturn sections.filter((section) => section.getAudit() > audit_number);\r\n\t\t} else if (comparator === \"LT\") {\r\n\t\t\treturn sections.filter((section) => section.getAudit() < audit_number);\r\n\t\t} else {\r\n\t\t\tthrow new InsightError(\"INVALID COMPARATOR IN SECTIONS GET\");\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"25e849a3efe75bddc4d696eebea269fc4cfec2eb","contentHash":"2a37e5e3d4903b5de9e9e7c960a1abda14416c60e46ab121c16e5184ba47b5df"},"C:\\Users\\user\\Documents\\Fourth Year W2023T1\\CPSC 310\\project_team186\\src\\controller\\QueryProcessor.ts":{"path":"C:\\Users\\user\\Documents\\Fourth Year W2023T1\\CPSC 310\\project_team186\\src\\controller\\QueryProcessor.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":25},"end":{"line":6,"column":52}},"4":{"start":{"line":7,"column":18},"end":{"line":7,"column":55}},"5":{"start":{"line":9,"column":17},"end":{"line":9,"column":35}},"6":{"start":{"line":10,"column":17},"end":{"line":10,"column":23}},"7":{"start":{"line":11,"column":16},"end":{"line":11,"column":36}},"8":{"start":{"line":12,"column":18},"end":{"line":12,"column":58}},"9":{"start":{"line":13,"column":18},"end":{"line":13,"column":63}},"10":{"start":{"line":14,"column":14},"end":{"line":14,"column":37}},"11":{"start":{"line":16,"column":8},"end":{"line":16,"column":38}},"12":{"start":{"line":17,"column":8},"end":{"line":17,"column":50}},"13":{"start":{"line":20,"column":8},"end":{"line":28,"column":9}},"14":{"start":{"line":21,"column":12},"end":{"line":21,"column":81}},"15":{"start":{"line":23,"column":13},"end":{"line":28,"column":9}},"16":{"start":{"line":24,"column":12},"end":{"line":24,"column":74}},"17":{"start":{"line":27,"column":12},"end":{"line":27,"column":22}},"18":{"start":{"line":31,"column":37},"end":{"line":31,"column":62}},"19":{"start":{"line":32,"column":25},"end":{"line":32,"column":61}},"20":{"start":{"line":33,"column":28},"end":{"line":33,"column":67}},"21":{"start":{"line":34,"column":28},"end":{"line":34,"column":58}},"22":{"start":{"line":35,"column":8},"end":{"line":35,"column":100}},"23":{"start":{"line":38,"column":8},"end":{"line":68,"column":9}},"24":{"start":{"line":39,"column":31},"end":{"line":39,"column":45}},"25":{"start":{"line":40,"column":31},"end":{"line":40,"column":42}},"26":{"start":{"line":41,"column":12},"end":{"line":44,"column":15}},"27":{"start":{"line":42,"column":32},"end":{"line":42,"column":54}},"28":{"start":{"line":43,"column":16},"end":{"line":43,"column":89}},"29":{"start":{"line":45,"column":12},"end":{"line":45,"column":32}},"30":{"start":{"line":47,"column":13},"end":{"line":68,"column":9}},"31":{"start":{"line":48,"column":31},"end":{"line":48,"column":33}},"32":{"start":{"line":49,"column":29},"end":{"line":49,"column":39}},"33":{"start":{"line":50,"column":12},"end":{"line":54,"column":15}},"34":{"start":{"line":51,"column":32},"end":{"line":51,"column":54}},"35":{"start":{"line":52,"column":38},"end":{"line":52,"column":97}},"36":{"start":{"line":53,"column":16},"end":{"line":53,"column":66}},"37":{"start":{"line":55,"column":12},"end":{"line":55,"column":32}},"38":{"start":{"line":57,"column":13},"end":{"line":68,"column":9}},"39":{"start":{"line":58,"column":31},"end":{"line":58,"column":33}},"40":{"start":{"line":59,"column":30},"end":{"line":59,"column":41}},"41":{"start":{"line":60,"column":28},"end":{"line":60,"column":53}},"42":{"start":{"line":61,"column":12},"end":{"line":62,"column":100}},"43":{"start":{"line":63,"column":12},"end":{"line":63,"column":95}},"44":{"start":{"line":63,"column":62},"end":{"line":63,"column":93}},"45":{"start":{"line":64,"column":12},"end":{"line":64,"column":32}},"46":{"start":{"line":67,"column":12},"end":{"line":67,"column":87}},"47":{"start":{"line":71,"column":29},"end":{"line":71,"column":47}},"48":{"start":{"line":72,"column":8},"end":{"line":74,"column":9}},"49":{"start":{"line":73,"column":12},"end":{"line":73,"column":79}},"50":{"start":{"line":75,"column":8},"end":{"line":80,"column":9}},"51":{"start":{"line":76,"column":12},"end":{"line":76,"column":69}},"52":{"start":{"line":79,"column":12},"end":{"line":79,"column":79}},"53":{"start":{"line":83,"column":8},"end":{"line":94,"column":9}},"54":{"start":{"line":84,"column":12},"end":{"line":90,"column":13}},"55":{"start":{"line":85,"column":16},"end":{"line":85,"column":42}},"56":{"start":{"line":88,"column":38},"end":{"line":88,"column":59}},"57":{"start":{"line":89,"column":16},"end":{"line":89,"column":92}},"58":{"start":{"line":93,"column":12},"end":{"line":93,"column":70}},"59":{"start":{"line":97,"column":29},"end":{"line":97,"column":36}},"60":{"start":{"line":98,"column":8},"end":{"line":100,"column":9}},"61":{"start":{"line":99,"column":12},"end":{"line":99,"column":77}},"62":{"start":{"line":101,"column":8},"end":{"line":106,"column":9}},"63":{"start":{"line":102,"column":12},"end":{"line":102,"column":81}},"64":{"start":{"line":105,"column":12},"end":{"line":105,"column":80}},"65":{"start":{"line":109,"column":27},"end":{"line":109,"column":63}},"66":{"start":{"line":110,"column":28},"end":{"line":110,"column":35}},"67":{"start":{"line":111,"column":8},"end":{"line":116,"column":9}},"68":{"start":{"line":112,"column":12},"end":{"line":112,"column":125}},"69":{"start":{"line":112,"column":51},"end":{"line":112,"column":123}},"70":{"start":{"line":114,"column":13},"end":{"line":116,"column":9}},"71":{"start":{"line":115,"column":12},"end":{"line":115,"column":112}},"72":{"start":{"line":115,"column":51},"end":{"line":115,"column":110}},"73":{"start":{"line":117,"column":8},"end":{"line":117,"column":29}},"74":{"start":{"line":120,"column":37},"end":{"line":120,"column":46}},"75":{"start":{"line":121,"column":8},"end":{"line":123,"column":11}},"76":{"start":{"line":122,"column":12},"end":{"line":122,"column":47}},"77":{"start":{"line":124,"column":8},"end":{"line":126,"column":9}},"78":{"start":{"line":125,"column":12},"end":{"line":125,"column":144}},"79":{"start":{"line":127,"column":30},"end":{"line":127,"column":86}},"80":{"start":{"line":127,"column":51},"end":{"line":127,"column":85}},"81":{"start":{"line":128,"column":34},"end":{"line":128,"column":36}},"82":{"start":{"line":129,"column":8},"end":{"line":136,"column":11}},"83":{"start":{"line":130,"column":32},"end":{"line":130,"column":34}},"84":{"start":{"line":131,"column":12},"end":{"line":134,"column":15}},"85":{"start":{"line":132,"column":39},"end":{"line":132,"column":74}},"86":{"start":{"line":133,"column":16},"end":{"line":133,"column":78}},"87":{"start":{"line":135,"column":12},"end":{"line":135,"column":52}},"88":{"start":{"line":137,"column":8},"end":{"line":137,"column":35}},"89":{"start":{"line":140,"column":8},"end":{"line":140,"column":55}},"90":{"start":{"line":143,"column":0},"end":{"line":143,"column":33}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":15,"column":4},"end":{"line":15,"column":5}},"loc":{"start":{"line":15,"column":30},"end":{"line":18,"column":5}},"line":15},"2":{"name":"(anonymous_2)","decl":{"start":{"line":19,"column":4},"end":{"line":19,"column":5}},"loc":{"start":{"line":19,"column":60},"end":{"line":29,"column":5}},"line":19},"3":{"name":"(anonymous_3)","decl":{"start":{"line":30,"column":4},"end":{"line":30,"column":5}},"loc":{"start":{"line":30,"column":57},"end":{"line":36,"column":5}},"line":30},"4":{"name":"(anonymous_4)","decl":{"start":{"line":37,"column":4},"end":{"line":37,"column":5}},"loc":{"start":{"line":37,"column":50},"end":{"line":69,"column":5}},"line":37},"5":{"name":"(anonymous_5)","decl":{"start":{"line":41,"column":31},"end":{"line":41,"column":32}},"loc":{"start":{"line":41,"column":43},"end":{"line":44,"column":13}},"line":41},"6":{"name":"(anonymous_6)","decl":{"start":{"line":50,"column":29},"end":{"line":50,"column":30}},"loc":{"start":{"line":50,"column":41},"end":{"line":54,"column":13}},"line":50},"7":{"name":"(anonymous_7)","decl":{"start":{"line":63,"column":49},"end":{"line":63,"column":50}},"loc":{"start":{"line":63,"column":62},"end":{"line":63,"column":93}},"line":63},"8":{"name":"(anonymous_8)","decl":{"start":{"line":70,"column":4},"end":{"line":70,"column":5}},"loc":{"start":{"line":70,"column":44},"end":{"line":81,"column":5}},"line":70},"9":{"name":"(anonymous_9)","decl":{"start":{"line":82,"column":4},"end":{"line":82,"column":5}},"loc":{"start":{"line":82,"column":43},"end":{"line":95,"column":5}},"line":82},"10":{"name":"(anonymous_10)","decl":{"start":{"line":96,"column":4},"end":{"line":96,"column":5}},"loc":{"start":{"line":96,"column":36},"end":{"line":107,"column":5}},"line":96},"11":{"name":"(anonymous_11)","decl":{"start":{"line":108,"column":4},"end":{"line":108,"column":5}},"loc":{"start":{"line":108,"column":32},"end":{"line":118,"column":5}},"line":108},"12":{"name":"(anonymous_12)","decl":{"start":{"line":112,"column":41},"end":{"line":112,"column":42}},"loc":{"start":{"line":112,"column":51},"end":{"line":112,"column":123}},"line":112},"13":{"name":"(anonymous_13)","decl":{"start":{"line":115,"column":41},"end":{"line":115,"column":42}},"loc":{"start":{"line":115,"column":51},"end":{"line":115,"column":110}},"line":115},"14":{"name":"(anonymous_14)","decl":{"start":{"line":119,"column":4},"end":{"line":119,"column":5}},"loc":{"start":{"line":119,"column":53},"end":{"line":138,"column":5}},"line":119},"15":{"name":"(anonymous_15)","decl":{"start":{"line":121,"column":31},"end":{"line":121,"column":32}},"loc":{"start":{"line":121,"column":45},"end":{"line":123,"column":9}},"line":121},"16":{"name":"(anonymous_16)","decl":{"start":{"line":127,"column":42},"end":{"line":127,"column":43}},"loc":{"start":{"line":127,"column":51},"end":{"line":127,"column":85}},"line":127},"17":{"name":"(anonymous_17)","decl":{"start":{"line":129,"column":37},"end":{"line":129,"column":38}},"loc":{"start":{"line":129,"column":50},"end":{"line":136,"column":9}},"line":129},"18":{"name":"(anonymous_18)","decl":{"start":{"line":131,"column":34},"end":{"line":131,"column":35}},"loc":{"start":{"line":131,"column":43},"end":{"line":134,"column":13}},"line":131},"19":{"name":"(anonymous_19)","decl":{"start":{"line":139,"column":4},"end":{"line":139,"column":5}},"loc":{"start":{"line":139,"column":34},"end":{"line":141,"column":5}},"line":139}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":20,"column":8},"end":{"line":28,"column":9}},"type":"if","locations":[{"start":{"line":20,"column":8},"end":{"line":28,"column":9}},{"start":{"line":20,"column":8},"end":{"line":28,"column":9}}],"line":20},"4":{"loc":{"start":{"line":20,"column":12},"end":{"line":20,"column":82}},"type":"binary-expr","locations":[{"start":{"line":20,"column":12},"end":{"line":20,"column":45}},{"start":{"line":20,"column":49},"end":{"line":20,"column":82}}],"line":20},"5":{"loc":{"start":{"line":23,"column":13},"end":{"line":28,"column":9}},"type":"if","locations":[{"start":{"line":23,"column":13},"end":{"line":28,"column":9}},{"start":{"line":23,"column":13},"end":{"line":28,"column":9}}],"line":23},"6":{"loc":{"start":{"line":38,"column":8},"end":{"line":68,"column":9}},"type":"if","locations":[{"start":{"line":38,"column":8},"end":{"line":68,"column":9}},{"start":{"line":38,"column":8},"end":{"line":68,"column":9}}],"line":38},"7":{"loc":{"start":{"line":38,"column":12},"end":{"line":38,"column":40}},"type":"binary-expr","locations":[{"start":{"line":38,"column":12},"end":{"line":38,"column":25}},{"start":{"line":38,"column":29},"end":{"line":38,"column":40}}],"line":38},"8":{"loc":{"start":{"line":47,"column":13},"end":{"line":68,"column":9}},"type":"if","locations":[{"start":{"line":47,"column":13},"end":{"line":68,"column":9}},{"start":{"line":47,"column":13},"end":{"line":68,"column":9}}],"line":47},"9":{"loc":{"start":{"line":47,"column":17},"end":{"line":47,"column":43}},"type":"binary-expr","locations":[{"start":{"line":47,"column":17},"end":{"line":47,"column":29}},{"start":{"line":47,"column":33},"end":{"line":47,"column":43}}],"line":47},"10":{"loc":{"start":{"line":57,"column":13},"end":{"line":68,"column":9}},"type":"if","locations":[{"start":{"line":57,"column":13},"end":{"line":68,"column":9}},{"start":{"line":57,"column":13},"end":{"line":68,"column":9}}],"line":57},"11":{"loc":{"start":{"line":57,"column":17},"end":{"line":57,"column":45}},"type":"binary-expr","locations":[{"start":{"line":57,"column":17},"end":{"line":57,"column":30}},{"start":{"line":57,"column":34},"end":{"line":57,"column":45}}],"line":57},"12":{"loc":{"start":{"line":72,"column":8},"end":{"line":74,"column":9}},"type":"if","locations":[{"start":{"line":72,"column":8},"end":{"line":74,"column":9}},{"start":{"line":72,"column":8},"end":{"line":74,"column":9}}],"line":72},"13":{"loc":{"start":{"line":75,"column":8},"end":{"line":80,"column":9}},"type":"if","locations":[{"start":{"line":75,"column":8},"end":{"line":80,"column":9}},{"start":{"line":75,"column":8},"end":{"line":80,"column":9}}],"line":75},"14":{"loc":{"start":{"line":75,"column":12},"end":{"line":75,"column":43}},"type":"binary-expr","locations":[{"start":{"line":75,"column":12},"end":{"line":75,"column":25}},{"start":{"line":75,"column":29},"end":{"line":75,"column":43}}],"line":75},"15":{"loc":{"start":{"line":83,"column":8},"end":{"line":94,"column":9}},"type":"if","locations":[{"start":{"line":83,"column":8},"end":{"line":94,"column":9}},{"start":{"line":83,"column":8},"end":{"line":94,"column":9}}],"line":83},"16":{"loc":{"start":{"line":84,"column":12},"end":{"line":90,"column":13}},"type":"if","locations":[{"start":{"line":84,"column":12},"end":{"line":90,"column":13}},{"start":{"line":84,"column":12},"end":{"line":90,"column":13}}],"line":84},"17":{"loc":{"start":{"line":98,"column":8},"end":{"line":100,"column":9}},"type":"if","locations":[{"start":{"line":98,"column":8},"end":{"line":100,"column":9}},{"start":{"line":98,"column":8},"end":{"line":100,"column":9}}],"line":98},"18":{"loc":{"start":{"line":101,"column":8},"end":{"line":106,"column":9}},"type":"if","locations":[{"start":{"line":101,"column":8},"end":{"line":106,"column":9}},{"start":{"line":101,"column":8},"end":{"line":106,"column":9}}],"line":101},"19":{"loc":{"start":{"line":101,"column":12},"end":{"line":101,"column":45}},"type":"binary-expr","locations":[{"start":{"line":101,"column":12},"end":{"line":101,"column":27}},{"start":{"line":101,"column":31},"end":{"line":101,"column":45}}],"line":101},"20":{"loc":{"start":{"line":111,"column":8},"end":{"line":116,"column":9}},"type":"if","locations":[{"start":{"line":111,"column":8},"end":{"line":116,"column":9}},{"start":{"line":111,"column":8},"end":{"line":116,"column":9}}],"line":111},"21":{"loc":{"start":{"line":114,"column":13},"end":{"line":116,"column":9}},"type":"if","locations":[{"start":{"line":114,"column":13},"end":{"line":116,"column":9}},{"start":{"line":114,"column":13},"end":{"line":116,"column":9}}],"line":114},"22":{"loc":{"start":{"line":124,"column":8},"end":{"line":126,"column":9}},"type":"if","locations":[{"start":{"line":124,"column":8},"end":{"line":126,"column":9}},{"start":{"line":124,"column":8},"end":{"line":126,"column":9}}],"line":124}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":99,"6":99,"7":99,"8":99,"9":99,"10":99,"11":99,"12":99,"13":302,"14":193,"15":109,"16":109,"17":0,"18":193,"19":193,"20":193,"21":193,"22":193,"23":109,"24":31,"25":31,"26":31,"27":64,"28":64,"29":31,"30":78,"31":47,"32":47,"33":47,"34":112,"35":112,"36":112,"37":47,"38":31,"39":31,"40":31,"41":31,"42":31,"43":31,"44":2002972,"45":31,"46":0,"47":99,"48":99,"49":99,"50":99,"51":99,"52":0,"53":99,"54":99,"55":4,"56":95,"57":95,"58":0,"59":99,"60":99,"61":73,"62":99,"63":99,"64":0,"65":73,"66":73,"67":73,"68":10,"69":118,"70":63,"71":63,"72":2181126,"73":73,"74":99,"75":99,"76":524957,"77":99,"78":8,"79":91,"80":558,"81":91,"82":91,"83":7993,"84":7993,"85":29534,"86":29534,"87":7993,"88":91,"89":824,"90":1},"f":{"0":1,"1":99,"2":302,"3":193,"4":109,"5":64,"6":112,"7":2002972,"8":99,"9":99,"10":99,"11":73,"12":118,"13":2181126,"14":99,"15":524957,"16":558,"17":7993,"18":29534,"19":824},"b":{"0":[1,1,1],"1":[1,0],"2":[1,1],"3":[193,109],"4":[302,192],"5":[109,0],"6":[31,78],"7":[109,31],"8":[47,31],"9":[78,47],"10":[31,0],"11":[31,31],"12":[99,0],"13":[99,0],"14":[99,99],"15":[99,0],"16":[4,95],"17":[73,26],"18":[99,0],"19":[99,99],"20":[10,63],"21":[63,0],"22":[8,91]},"inputSourceMap":{"version":3,"file":"C:/Users/user/Documents/Fourth Year W2023T1/CPSC 310/project_team186/src/controller/QueryProcessor.ts","sources":["C:/Users/user/Documents/Fourth Year W2023T1/CPSC 310/project_team186/src/controller/QueryProcessor.ts"],"names":[],"mappings":"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","sourcesContent":["import {Filter, Options, QueryObject} from \"./IQueryProcessor\";\r\nimport Section from \"./Section\";\r\nimport {InsightError, InsightResult, ResultTooLargeError} from \"./IInsightFacade\";\r\nimport Dataset from \"./Dataset\";\r\n\r\nexport default class QueryProcessor {\r\n\tprivate numberKeys = [\"GT\", \"LT\", \"EQ\"];\r\n\tprivate stringKeys = [\"IS\"];\r\n\tprivate logicKeys = [\"AND\", \"OR\", \"NOT\"];\r\n\tprivate numberTypes = [\"year\", \"avg\", \"pass\", \"fail\", \"audit\"];\r\n\tprivate stringTypes = [\"uuid\", \"id\", \"title\", \"instructor\", \"dept\"];\r\n\tprivate dataset = new Dataset();\r\n\r\n\tconstructor(id: string, sections: Section[]) {\r\n\t\tthis.dataset.setDatasetID(id);\r\n\t\tthis.dataset.addDatasetSections(sections);\r\n\t}\r\n\r\n\tprivate decideNextBlockHandle(filters: Filter, resultSections: Section[], nextKey: string): Section[] {\r\n\t\tif (this.numberKeys.includes(nextKey) || this.stringKeys.includes(nextKey)) {\t// GT, LT, EQ, IS\r\n\t\t\treturn this.handleNumberStringKeys(filters, resultSections, nextKey);\r\n\t\t} else if (this.logicKeys.includes(nextKey)) {\t\t\t\t\t\t\t\t\t// AND, OR, NOT\r\n\t\t\treturn this.handleLogicKeys(filters, resultSections, nextKey);\r\n\t\t} else {\r\n\t\t\treturn [];\r\n\t\t}\r\n\t}\r\n\r\n\tprivate handleNumberStringKeys(filters: Filter, resultSections: Section[], key: string): Section[] {\r\n\t\tconst innerObjectOfNextKey = Object.values(filters as JSON)[0]; \t// e.g. \"sections_avg\": 97 from GT{}\r\n\t\tconst innerKey = Object.keys(innerObjectOfNextKey)[0];\t\t// \"sections_avg\"\r\n\t\tconst targetField = this.getStringAfterUnderscore(innerKey);\t// \"avg\"\r\n\t\tconst targetValue = innerObjectOfNextKey[innerKey];  \t\t\t\t\t\t\t// 97\r\n\t\t// console.log(\r\n        // \t`innerObjectOf${key}: `, innerObjectOfNextKey,\r\n        // \t\"innerKey: \", innerKey,\r\n        // \t\"targetField: \", targetField,\r\n        // \t\"targetValue: \", targetValue\r\n\t\t// );\r\n\t\t// console.log(\"processed: \", processedResultSections);\r\n\t\treturn this.dataset.getSectionsWithCondition(resultSections, key, targetField, targetValue);\r\n\t}\r\n\r\n\t/*\r\n\t\tHandles AND, OR, NOT logic\r\n\t*/\r\n\tprivate handleLogicKeys(filters: Filter, resultSections: Section[], key: string): Section[] {\r\n\t\tif (key === \"AND\" && filters.AND) {\r\n\t\t\tlet logicResults = resultSections;\r\n\t\t\tconst andFilters = filters.AND;\r\n\t\t\t// do this.decideNextBlockHandle for each filter in AND[]\r\n\t\t\tandFilters.forEach((filter) => {\r\n\t\t\t\tconst nextKey = Object.keys(filter)[0];\r\n\t\t\t\t// logicResults contains results after processing each filter\r\n\t\t\t\tlogicResults = this.decideNextBlockHandle(filter, logicResults, nextKey);\r\n\t\t\t});\r\n\t\t\treturn logicResults;\r\n\t\t} else if (key === \"OR\" && filters.OR) {\r\n\t\t\tlet logicResults: Section[] = [];\r\n\t\t\tconst orFilter = filters.OR;\r\n\t\t\torFilter.forEach((filter) => {\r\n\t\t\t\tconst nextKey = Object.keys(filter)[0];\r\n\t\t\t\tconst filterResults = this.decideNextBlockHandle(filter, resultSections, nextKey);\r\n\t\t\t\tlogicResults = logicResults.concat(filterResults);\r\n\t\t\t});\r\n\t\t\treturn logicResults;\r\n\t\t} else if (key === \"NOT\" && filters.NOT) {\r\n\t\t\tlet logicResults: Section[] = [];\r\n\t\t\tconst notFilter = filters.NOT;\r\n\t\t\tconst nextKey = Object.keys(notFilter)[0];\r\n\t\t\t// do this.decideNextBlockHandle for all filters inside NOT, and filter them out afterward\r\n\t\t\tlogicResults =\r\n\t\t\t\tlogicResults.concat(this.decideNextBlockHandle(notFilter, resultSections, nextKey));\r\n\t\t\tlogicResults = resultSections.filter((section) => !logicResults.includes(section));\r\n\t\t\treturn logicResults;\r\n\t\t} else {\r\n\t\t\tthrow new InsightError(`ERROR in handleLogicKeys ${key}`);\r\n\t\t}\r\n\t}\r\n\r\n    /*\r\n        Assumes correctly formatted (QueryValidator.isValid) query.\r\n     */\r\n\tpublic processQuery(query: QueryObject, allDatasetSections: Section[]): InsightResult[] {\r\n\t\tlet resultSections = allDatasetSections;\r\n\t\tif (query.WHERE) {\r\n\t\t\tresultSections = this.handleWhere(query.WHERE, allDatasetSections);\r\n\t\t}\r\n\t\tif (query.OPTIONS && resultSections) {\r\n\t\t\treturn this.handleOptions(query.OPTIONS, resultSections);\r\n\t\t} else {\r\n\t\t\tthrow new InsightError(\"ERROR IN processQuery()\");\r\n\t\t}\r\n\t}\r\n\r\n\tprivate handleWhere(where: Filter, allDatasetSections: Section[]): Section[] {\r\n\t\tif (where) {\r\n\t\t\tif (Object.keys(where).length === 0) {\r\n\t\t\t\treturn allDatasetSections;\r\n\t\t\t} else {\r\n\t\t\t\tconst firstWhereKey = Object.keys(where)[0];\r\n\t\t\t\treturn this.decideNextBlockHandle(where, allDatasetSections, firstWhereKey);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthrow new InsightError(\"ERROR in WHERE\");\r\n\t\t}\r\n\t}\r\n\r\n\tprivate handleOptions(options: Options, results: Section[]): InsightResult[] {\r\n\t\tlet resultSections = results;\r\n\t\tif (options.ORDER) {\r\n\t\t\tresultSections = this.handleOrder(options.ORDER, resultSections);\r\n\t\t}\r\n\t\tif (options.COLUMNS && resultSections) {\r\n\t\t\treturn this.convertToInsightResults(options.COLUMNS, resultSections);\r\n\t\t} else {\r\n\t\t\tthrow new InsightError(\"ERROR in handleOptions()\");\r\n\t\t}\r\n\t}\r\n\r\n\tprivate handleOrder(order: string, results: Section[]): Section[] {\r\n\t\tconst orderField = this.getStringAfterUnderscore(order);\r\n\t\tlet sortedResults = results;\r\n\t\tif (this.stringTypes.includes(orderField)) {\r\n\t\t\tsortedResults = results.sort((a, b) =>\r\n\t\t\t\t(a.getColumnField(orderField) as string).localeCompare(b.getColumnField(orderField) as string));\r\n\t\t} else if (this.numberTypes.includes(orderField)) {\r\n\t\t\tsortedResults = results.sort((a, b)\t=>\r\n\t\t\t\t(a.getColumnField(orderField) as number) - (b.getColumnField(orderField) as number));\r\n\t\t}\r\n\t\treturn sortedResults;\r\n\t}\r\n\r\n\tprivate convertToInsightResults(columns: string[], resultSections: Section[]): InsightResult[] {\r\n\t\t// remove duplicate Sections\r\n\t\tconst uniqueResultSections = new Set<Section>();\r\n\t\tresultSections.forEach((sections) => {\r\n\t\t\tuniqueResultSections.add(sections);\r\n\t\t});\r\n\r\n\t\tif (uniqueResultSections.size > 5000) {\r\n\t\t\tthrow new ResultTooLargeError\r\n\t\t\t(\"The result is too big. Only queries with a maximum of 5000 results are supported.\");\r\n\t\t}\r\n\r\n\t\tconst targetColumns: string[] = columns.map((col) => this.getStringAfterUnderscore(col));\r\n\r\n        // for each section, add all the corresponding columns with values to insightResultsArray\r\n\t\tlet insightResultsArray: Array<{[key: string]: string | number}> = [];\r\n\t\tuniqueResultSections.forEach((section) => {\r\n\t\t\tlet insightResult: {[key: string]: string | number} = {};\r\n\t\t\ttargetColumns.forEach((col) => {\r\n\t\t\t\tlet insightColumnKey = columns[targetColumns.indexOf(col)];\r\n\t\t\t\tinsightResult[insightColumnKey] = section.getColumnField(col);\r\n\t\t\t});\r\n\t\t\tinsightResultsArray.push(insightResult);\r\n\t\t});\r\n\t\treturn insightResultsArray as InsightResult[];\r\n\t}\r\n\r\n\tprivate getStringAfterUnderscore(str: string): string {\r\n\t\treturn str.substring(str.lastIndexOf(\"_\") + 1);\r\n\t}\r\n}\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"92ca6474d8d01564646a112b78d8c76afa672d6b","contentHash":"36060d6929c1e5ba2e1a78349d7990330b2abff0fe6948886187cfb7c7f99b60"}}